---
# Source: consul/templates/consul-statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "ship-consul"
  labels:
    heritage: "Tiller"
    release: "ship"
    chart: consul-3.5.3
    component: "ship-consul"
spec:
  serviceName: "ship-consul"
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      release: "ship"
      component: "ship-consul"
  template:
    metadata:
      name: "ship-consul"
      labels:
        heritage: "Tiller"
        release: "ship"
        chart: consul-3.5.3
        component: "ship-consul"
    spec:
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - "ship-consul"
        
      containers:
      - name: "ship-consul"
        image: "consul:1.0.0"
        imagePullPolicy: "Always"
        ports:
        - name: http
          containerPort: 8500
        - name: rpc
          containerPort: 8400
        - name: serflan-tcp
          protocol: "TCP"
          containerPort: 8301
        - name: serflan-udp
          protocol: "UDP"
          containerPort: 8301
        - name: serfwan-tcp
          protocol: "TCP"
          containerPort: 8302
        - name: serfwan-udp
          protocol: "UDP"
          containerPort: 8302
        - name: server
          containerPort: 8300
        - name: consuldns-tcp
          containerPort: 8600
        - name: consuldns-udp
          protocol: "UDP"
          containerPort: 8600
        resources:
          {}
          
        env:
        - name: INITIAL_CLUSTER_SIZE
          value: "3"
        - name: STATEFULSET_NAME
          value: "ship-consul"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: STATEFULSET_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DNSPORT
          value: "8600"
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/consul
        - name: gossip-key
          mountPath: /etc/consul/secrets
          readOnly: true
        
        livenessProbe:
          exec:
            command:
            - consul
            - members
            - -http-addr=http://127.0.0.1:8500
          initialDelaySeconds: 300
          timeoutSeconds: 5
        command:
          - "/bin/sh"
          - "-ec"
          - |
            IP=$(hostname -i)
            if [ -e /etc/consul/secrets/gossip-key ]; then
              echo "{\"encrypt\": \"$(base64 /etc/consul/secrets/gossip-key)\"}" > /etc/consul/encrypt.json
              GOSSIP_KEY="-config-file /etc/consul/encrypt.json"
            fi

            for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
                while true; do
                    echo "Waiting for ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME} to come up"
                    ping -W 1 -c 1 ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME}.${STATEFULSET_NAMESPACE}.svc > /dev/null && break
                    sleep 1s
                done
            done

            PEERS=""
            for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
              NEXT_PEER="$(ping -c 1 ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME}.${STATEFULSET_NAMESPACE}.svc | awk -F'[()]' '/PING/{print $2}')"
              if [ "${NEXT_PEER}" != "${POD_IP}" ]; then
                PEERS="${PEERS}${PEERS:+ } -retry-join ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME}.${STATEFULSET_NAMESPACE}.svc"
              fi
            done

            exec /bin/consul agent \
              -ui \
              -domain=consul \
              -data-dir=/var/lib/consul \
              -server \
              -bootstrap-expect=${INITIAL_CLUSTER_SIZE} \
              -disable-keyring-file \
              -bind=0.0.0.0 \
              -advertise=${IP} \
              ${PEERS} \
              ${GOSSIP_KEY} \
              -client=0.0.0.0 \
              -dns-port=${DNSPORT} \
              -http-port=8500
      volumes:
      - name: gossip-key
        secret:
          secretName: ship-consul-gossip-key
      
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          # upstream recommended max is 700M
          storage: "1Gi"
