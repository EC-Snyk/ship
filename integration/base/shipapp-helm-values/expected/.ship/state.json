{
  "v1": {
    "config": {},
    "helmValues": "# Default values for consul.\n# This is a YAML-formatted file.\n# Declare name/value pairs to be passed into your templates.\n# name: value\n\n## Consul service ports\nHttpPort: 8500\nRpcPort: 8400\nSerflanPort: 8301\nSerflanUdpPort: 8301\nSerfwanPort: 8302\nSerfwanUdpPort: 8302\nServerPort: 8300\nConsulDnsPort: 8600\n\n## Specify the domain with which consul should run with\n## This will be passed as a -domain parameter\nDomain: consul\n\n## Used as selector\nComponent: \"consul\"\nReplicas: 3\nImage: \"consul\"\nImageTag: \"1.0.0\"\nImagePullPolicy: \"Always\"\nResources: {}\n # requests:\n #   cpu: \"100m\"\n #   memory: \"256Mi\"\n # limits:\n #   cpu: \"500m\"\n #   memory: \"512Mi\"\n## Persistent volume size\n\npriorityClassName: \"\"\n\nStorage: \"1Gi\"\n\n## Needed for 0.8.0 and later IF all consul containers are spun up\n## on the same machine. Without this they all generate the same\n## host id.\nDisableHostNodeId: false\n\n## Datacenter name for consul. If not supplied, will use the consul\n## default 'dc1'\n# DatacenterName: dc1\n\n## Encrypt Gossip Traffic\nGossip:\n  Encrypt: true\n  Create: true\n\n## predefined value for gossip key.\n## Will use a generated random alpha numeric if not provided\n# GossipKey: key\n\n## consul data Persistent Volume Storage Class\n## If defined, StorageClassName: \u003cstorageClass\u003e\n## If set to \"-\", StorageClassName: \"\", which disables dynamic provisioning\n## If undefined (the default) or set to null, no storageClassName spec is\n##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n##   GKE, AWS \u0026 OpenStack)\n##\n# StorageClass: \"-\"\n\n## Setting maxUnavailable will create a pod disruption budget that will prevent\n## voluntarty cluster administration from taking down too many consul pods. If\n## you set maxUnavailable, you should set it to ceil((n/2) - 1), where\n## n = Replicas. For example, if you have 5 or 6 Replicas, you'll want to set\n## maxUnavailable = 2. If you are using the default of 3 Replicas, you'll want\n## to set maxUnavailable to 1.\nmaxUnavailable: 1\n\n## nodeAffinity settings\n# nodeAffinity:\n#   requiredDuringSchedulingIgnoredDuringExecution:\n#     nodeSelectorTerms:\n#     - matchExpressions:\n#       - key: cloud.google.com/gke-preemptible\n#         operator: NotIn\n#         values:\n#         - true\n\n## Affinity settings\naffinity: |\n  podAntiAffinity:\n    preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 1\n      podAffinityTerm:\n        topologyKey: kubernetes.io/hostname\n        labelSelector:\n          matchExpressions:\n          - key: component\n            operator: In\n            values:\n            - \"{{ .Release.Name }}-{{ .Values.Component }}\"\n\n## Enable Consul Web UI\n##\nui:\n  enabled: true\n## Create dedicated UI service\n##\nuiService:\n  enabled: true\n  type: \"NodePort\"\n  annotations: {}\n\nConsulConfig: []\n#  - type: secret\n#    name: consul-defaults\n#  - type: configMap\n#    name: consul-defaults\n\n## Create an Ingress for the Web UI\nuiIngress:\n  enabled: false\n  annotations: {}\n  labels: {}\n  hosts: []\n  tls: {}\n\n## Useful when ACLs are enabled\nacl:\n  enabled: false\n  masterToken: \"\"\n  agentToken: \"\"\n\n## test container details\ntest:\n  image: lachlanevenson/k8s-kubectl\n  imageTag: v1.4.8-bash\n  rbac:\n    create: false\n    serviceAccountName: \"\"\n\nnodeSelector: {}\ntolerations: []\n",
    "releaseName": "ship",
    "upstream": "__upstream__",
    "metadata": {
      "applicationType": "replicated.app",
      "releaseNotes": "",
      "version": ""
    },
    "contentSHA": "94917a42778f666eec3aa892f6baacc92d7fca0a6889a6831635c8e9026265d5"
  }
}
