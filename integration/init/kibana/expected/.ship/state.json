{
  "v1": {
    "config": {},
    "releaseName": "kibana",
    "helmValuesDefaults": "image:\n  repository: \"docker.elastic.co/kibana/kibana-oss\"\n  tag: \"6.5.4\"\n  pullPolicy: \"IfNotPresent\"\n\ncommandline:\n  args: []\n\nenv: {}\n  # All Kibana configuration options are adjustable via env vars.\n  # To adjust a config option to an env var uppercase + replace `.` with `_`\n  # Ref: https://www.elastic.co/guide/en/kibana/current/settings.html\n  #\n  # ELASTICSEARCH_URL: http://elasticsearch-client:9200\n  # SERVER_PORT: 5601\n  # LOGGING_VERBOSE: \"true\"\n  # SERVER_DEFAULTROUTE: \"/app/kibana\"\n\nfiles:\n  kibana.yml:\n    ## Default Kibana configuration from kibana-docker.\n    server.name: kibana\n    server.host: \"0\"\n    elasticsearch.url: http://elasticsearch:9200\n\n    ## Custom config properties below\n    ## Ref: https://www.elastic.co/guide/en/kibana/current/settings.html\n    # server.port: 5601\n    # logging.verbose: \"true\"\n    # server.defaultRoute: \"/app/kibana\"\n\ndeployment:\n  annotations: {}\n\nservice:\n  type: ClusterIP\n  externalPort: 443\n  internalPort: 5601\n  # authProxyPort: 5602 To be used with authProxyEnabled and a proxy extraContainer\n  ## External IP addresses of service\n  ## Default: nil\n  ##\n  # externalIPs:\n  # - 192.168.0.1\n  #\n  ## LoadBalancer IP if service.type is LoadBalancer\n  ## Default: nil\n  ##\n  # loadBalancerIP: 10.2.2.2\n  annotations: {}\n    # Annotation example: setup ssl with aws cert when service.type is LoadBalancer\n    # service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:EXAMPLE_CERT\n  labels: {}\n    ## Label example: show service URL in `kubectl cluster-info`\n    # kubernetes.io/cluster-service: \"true\"\n  ## Limit load balancer source ips to list of CIDRs (where available)\n  # loadBalancerSourceRanges: []\n\ningress:\n  enabled: false\n  # hosts:\n    # - kibana.localhost.localdomain\n    # - localhost.localdomain/kibana\n  # annotations:\n  #   kubernetes.io/ingress.class: nginx\n  #   kubernetes.io/tls-acme: \"true\"\n  # tls:\n    # - secretName: chart-example-tls\n    #   hosts:\n    #     - chart-example.local\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: false\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  # If set and create is false, the service account must be existing\n  name:\n\nlivenessProbe:\n  enabled: false\n  initialDelaySeconds: 30\n  timeoutSeconds: 10\n\nreadinessProbe:\n  enabled: false\n  initialDelaySeconds: 30\n  timeoutSeconds: 10\n  periodSeconds: 10\n  successThreshold: 5\n\n# Enable an authproxy. Specify container in extraContainers\nauthProxyEnabled: false\n\nextraContainers: |\n# - name: proxy\n#   image: quay.io/gambol99/keycloak-proxy:latest\n#   args:\n#     - --resource=uri=/*\n#     - --discovery-url=https://discovery-url\n#     - --client-id=client\n#     - --client-secret=secret\n#     - --listen=0.0.0.0:5602\n#     - --upstream-url=http://127.0.0.1:5601\n#   ports:\n#     - name: web\n#       containerPort: 9090\nresources: {}\n  # limits:\n  #   cpu: 100m\n  #   memory: 300Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 300Mi\n\npriorityClassName: \"\"\n\n# Affinity for pod assignment\n# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n# affinity: {}\n\n# Tolerations for pod assignment\n# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\ntolerations: []\n\n# Node labels for pod assignment\n# Ref: https://kubernetes.io/docs/user-guide/node-selection/\nnodeSelector: {}\n\npodAnnotations: {}\nreplicaCount: 1\nrevisionHistoryLimit: 3\n\n# To export a dashboard from a running Kibana 6.3.x use:\n# curl --user \u003cusername\u003e:\u003cpassword\u003e -XGET https://kibana.yourdomain.com:5601/api/kibana/dashboards/export?dashboard=\u003csome-dashboard-uuid\u003e \u003e my-dashboard.json\n# A dashboard is defined by a name and a string with the json payload or the download url\ndashboardImport:\n  timeout: 60\n  xpackauth:\n    enabled: false\n    username: myuser\n    password: mypass\n  dashboards: {}\n    # k8s: https://raw.githubusercontent.com/monotek/kibana-dashboards/master/k8s-fluentd-elasticsearch.json\n\n# List of plugins to install using initContainer\n# NOTE : We notice that lower resource constraints given to the chart + plugins are likely not going to work well.\nplugins:\n  # set to true to enable plugins installation\n  enabled: false\n  # set to true to remove all kibana plugins before installation\n  reset: false\n  # Use \u003cplugin_name,version,url\u003e to add/upgrade plugin\n  values:\n    # - elastalert-kibana-plugin,1.0.1,https://github.com/bitsensor/elastalert-kibana-plugin/releases/download/1.0.1/elastalert-kibana-plugin-1.0.1-6.4.2.zip\n    # - logtrail,0.1.30,https://github.com/sivasamyk/logtrail/releases/download/v0.1.30/logtrail-6.4.2-0.1.30.zip\n    # - other_plugin\n\npersistentVolumeClaim:\n  # set to true to use pvc\n  enabled: false\n  # set to true to use you own pvc\n  existingClaim: false\n  annotations: {}\n\n  accessModes:\n    - ReadWriteOnce\n  size: \"5Gi\"\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  # storageClass: \"-\"\n\n# default security context\nsecurityContext:\n  enabled: false\n  allowPrivilegeEscalation: false\n  runAsUser: 1000\n  fsGroup: 2000\n\nextraConfigMapMounts: []\n  # - name: logtrail-configs\n  #   configMap: kibana-logtrail\n  #   mountPath: /usr/share/kibana/plugins/logtrail/logtrail.json\n  #   subPath: logtrail.json\n",
    "upstream": "github.com/replicatedhq/test-charts/tree/316b56dd3c1209a470dccaa8016c4cad76de0299/kibana",
    "metadata": {
      "applicationType": "helm",
      "sequence": 0,
      "icon": "https://raw.githubusercontent.com/elastic/kibana/master/src/ui/public/icons/kibana-color.svg",
      "name": "kibana",
      "releaseNotes": "Add kibana (#27)",
      "version": "1.1.2",
      "license": {
        "id": "",
        "assignee": "",
        "createdAt": "0001-01-01T00:00:00Z",
        "expiresAt": "0001-01-01T00:00:00Z",
        "type": ""
      }
    },
    "upstreamContents": {
      "upstreamFiles": [
        {
          "filePath": ".helmignore",
          "fileContents": "IyBQYXR0ZXJucyB0byBpZ25vcmUgd2hlbiBidWlsZGluZyBwYWNrYWdlcy4KIyBUaGlzIHN1cHBvcnRzIHNoZWxsIGdsb2IgbWF0Y2hpbmcsIHJlbGF0aXZlIHBhdGggbWF0Y2hpbmcsIGFuZAojIG5lZ2F0aW9uIChwcmVmaXhlZCB3aXRoICEpLiBPbmx5IG9uZSBwYXR0ZXJuIHBlciBsaW5lLgouRFNfU3RvcmUKIyBDb21tb24gVkNTIGRpcnMKLmdpdC8KLmdpdGlnbm9yZQouYnpyLwouYnpyaWdub3JlCi5oZy8KLmhnaWdub3JlCi5zdm4vCiMgQ29tbW9uIGJhY2t1cCBmaWxlcwoqLnN3cAoqLmJhawoqLnRtcAoqfgojIFZhcmlvdXMgSURFcwoucHJvamVjdAouaWRlYS8KKi50bXByb2o="
        },
        {
          "filePath": "Chart.yaml",
          "fileContents": "bmFtZToga2liYW5hCnZlcnNpb246IDEuMS4yCmFwcFZlcnNpb246IDYuNS40CmRlc2NyaXB0aW9uOiBLaWJhbmEgaXMgYW4gb3BlbiBzb3VyY2UgZGF0YSB2aXN1YWxpemF0aW9uIHBsdWdpbiBmb3IgRWxhc3RpY3NlYXJjaAppY29uOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZWxhc3RpYy9raWJhbmEvbWFzdGVyL3NyYy91aS9wdWJsaWMvaWNvbnMva2liYW5hLWNvbG9yLnN2ZwprZXl3b3JkczoKLSBlbGFzdGljc2VhcmNoCi0ga2liYW5hCm1haW50YWluZXJzOgotIG5hbWU6IGNvbXBsZWF0YW5nCiAgZW1haWw6IGNhc2V5QG1vbmF4LmlvCnNvdXJjZXM6Ci0gaHR0cHM6Ly9naXRodWIuY29tL2VsYXN0aWMva2liYW5hCmVuZ2luZTogZ290cGwKaG9tZTogaHR0cHM6Ly93d3cuZWxhc3RpYy5jby9wcm9kdWN0cy9raWJhbmEK"
        },
        {
          "filePath": "OWNERS",
          "fileContents": "YXBwcm92ZXJzOgotIGNvbXBsZWF0YW5nCi0gbW9ub3RlawpyZXZpZXdlcnM6Ci0gY29tcGxlYXRhbmcKLSBtb25vdGVrCg=="
        },
        {
          "filePath": "README.md",
          "fileContents": ""
        },
        {
          "filePath": "ci/dashboard-values.yaml",
          "fileContents": "LS0tCiMgZW5hYmxlIHRoZSBkYXNoYm9hcmQgaW5pdCBjb250YWluZXIgd2l0aCBkYXNoYm9hcmQgZW1iZWRkZWQgaW4gY29uZmlnbWFwCgpkYXNoYm9hcmRJbXBvcnQ6CiAgZGFzaGJvYXJkczoKICAgIDFfY3JlYXRlX2luZGV4OiB8LQogICAgICB7CiAgICAgICAgInZlcnNpb24iOiAiNi40LjIiLAogICAgICAgICJvYmplY3RzIjogWwogICAgICAgICAgewogICAgICAgICAgICAiaWQiOiAiYTg4NzM4ZTAtZDNjMS0xMWU4LWIzOGUtYTM3YzIxY2Y4Yzk1IiwKICAgICAgICAgICAgInZlcnNpb24iOiAyLAogICAgICAgICAgICAiYXR0cmlidXRlcyI6IHsKICAgICAgICAgICAgICAidGl0bGUiOiAibG9nc3Rhc2gtKiIsCiAgICAgICAgICAgICAgInRpbWVGaWVsZE5hbWUiOiAiQHRpbWVzdGFtcCIsCiAgICAgICAgICAgICAgImZpZWxkcyI6ICJbe1wibmFtZVwiOlwiQHRpbWVzdGFtcFwiLFwidHlwZVwiOlwiZGF0ZVwiLFwiY291bnRcIjowLFwic2NyaXB0ZWRcIjpmYWxzZSxcInNlYXJjaGFibGVcIjp0cnVlLFwiYWdncmVnYXRhYmxlXCI6dHJ1ZSxcInJlYWRGcm9tRG9jVmFsdWVzXCI6dHJ1ZX1dIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9Cgo="
        },
        {
          "filePath": "ci/extra-configmap-mounts.yaml",
          "fileContents": "LS0tCmV4dHJhQ29uZmlnTWFwTW91bnRzOgogIC0gbmFtZTogbG9ndHJhaWwtY29uZmlncwogICAgY29uZmlnTWFwOiBraWJhbmEtbG9ndHJhaWwKICAgIG1vdW50UGF0aDogL3Vzci9zaGFyZS9raWJhbmEvcGx1Z2lucy9sb2d0cmFpbC9sb2d0cmFpbC5qc29uCiAgICBzdWJQYXRoOiBsb2d0cmFpbC5qc29uCg=="
        },
        {
          "filePath": "ci/ingress-hosts-paths.yaml",
          "fileContents": "aW5ncmVzczoKICBob3N0czoKICAgIC0gbG9jYWxob3N0LmxvY2FsZG9tYWluL2tpYmFuYQo="
        },
        {
          "filePath": "ci/ingress-hosts.yaml",
          "fileContents": "aW5ncmVzczoKICBob3N0czoKICAgIC0ga2liYW5hLmxvY2FsaG9zdC5sb2NhbGRvbWFpbgo="
        },
        {
          "filePath": "ci/plugin-install.yaml",
          "fileContents": "LS0tCiMgZW5hYmxlIHRoZSBwbHVnaW4gaW5pdCBjb250YWluZXIgd2l0aCBwbHVnaW5zIHJldHJpZXZlZCBmcm9tIGFuIFVSTApwbHVnaW5zOgogIGVuYWJsZWQ6IHRydWUKICByZXNldDogZmFsc2UKICAjIFVzZSA8cGx1Z2luX25hbWUsdmVyc2lvbix1cmw+IHRvIGFkZC91cGdyYWRlIHBsdWdpbgogIHZhbHVlczoKICAgIC0gbG9ndHJhaWwsMC4xLjMwLGh0dHBzOi8vZ2l0aHViLmNvbS9zaXZhc2FteWsvbG9ndHJhaWwvcmVsZWFzZXMvZG93bmxvYWQvdjAuMS4zMC9sb2d0cmFpbC02LjQuMy0wLjEuMzAuemlwCiAgICAjIC0gb3RoZXJfcGx1Z2luCg=="
        },
        {
          "filePath": "ci/pvc.yaml",
          "fileContents": "LS0tCnBlcnNpc3RlbnRWb2x1bWVDbGFpbToKICAjIHNldCB0byB0cnVlIHRvIHVzZSBwdmMKICBlbmFibGVkOiB0cnVlCiAgIyBzZXQgdG8gdHJ1ZSB0byB1c2UgeW91IG93biBwdmMKICBleGlzdGluZ0NsYWltOiBmYWxzZQogIGFubm90YXRpb25zOiB7fQoKICBhY2Nlc3NNb2RlczoKICAgIC0gUmVhZFdyaXRlT25jZQogIHNpemU6ICI1R2ki"
        },
        {
          "filePath": "ci/security-context.yaml",
          "fileContents": "LS0tCnNlY3VyaXR5Q29udGV4dDoKICBlbmFibGVkOiB0cnVlCiAgYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uOiBmYWxzZQogIHJ1bkFzVXNlcjogMTAwMAogIGZzR3JvdXA6IDIwMDA="
        },
        {
          "filePath": "ci/url_dashboard-values.yaml",
          "fileContents": "LS0tCiMgZW5hYmxlIHRoZSBkYXNoYm9hcmQgaW5pdCBjb250YWluZXIgd2l0aCBkYXNoYm9hcmQgcmV0cmlldmVkIGZyb20gYW4gVVJMCgpkYXNoYm9hcmRJbXBvcnQ6CiAgZGFzaGJvYXJkczoKICAgIGs4czogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL21vbm90ZWsva2liYW5hLWRhc2hib2FyZHMvbWFzdGVyL2s4cy1mbHVlbnRkLWVsYXN0aWNzZWFyY2guanNvbgo="
        },
        {
          "filePath": "templates/NOTES.txt",
          "fileContents": "VG8gdmVyaWZ5IHRoYXQge3sgdGVtcGxhdGUgImtpYmFuYS5mdWxsbmFtZSIgLiB9fSBoYXMgc3RhcnRlZCwgcnVuOgoKICBrdWJlY3RsIC0tbmFtZXNwYWNlPXt7IC5SZWxlYXNlLk5hbWVzcGFjZSB9fSBnZXQgcG9kcyAtbCAiYXBwPXt7IHRlbXBsYXRlICJraWJhbmEubmFtZSIgLiB9fSIKCktpYmFuYSBjYW4gYmUgYWNjZXNzZWQ6CgogICogRnJvbSBvdXRzaWRlIHRoZSBjbHVzdGVyLCBydW4gdGhlc2UgY29tbWFuZHMgaW4gdGhlIHNhbWUgc2hlbGw6CiAgICB7ey0gaWYgY29udGFpbnMgIk5vZGVQb3J0IiAuVmFsdWVzLnNlcnZpY2UudHlwZSB9fQoKICAgIGV4cG9ydCBOT0RFX1BPUlQ9JChrdWJlY3RsIGdldCAtLW5hbWVzcGFjZSB7eyAuUmVsZWFzZS5OYW1lc3BhY2UgfX0gLW8ganNvbnBhdGg9Insuc3BlYy5wb3J0c1swXS5ub2RlUG9ydH0iIHNlcnZpY2VzIHt7IHRlbXBsYXRlICJraWJhbmEuZnVsbG5hbWUiIC4gfX0pCiAgICBleHBvcnQgTk9ERV9JUD0kKGt1YmVjdGwgZ2V0IG5vZGVzIC0tbmFtZXNwYWNlIHt7IC5SZWxlYXNlLk5hbWVzcGFjZSB9fSAtbyBqc29ucGF0aD0iey5pdGVtc1swXS5zdGF0dXMuYWRkcmVzc2VzWzBdLmFkZHJlc3N9IikKICAgIGVjaG8gaHR0cDovLyROT0RFX0lQOiROT0RFX1BPUlQKICAgIHt7LSBlbHNlIGlmIGNvbnRhaW5zICJDbHVzdGVySVAiICAuVmFsdWVzLnNlcnZpY2UudHlwZSB9fQoKICAgIGV4cG9ydCBQT0RfTkFNRT0kKGt1YmVjdGwgZ2V0IHBvZHMgLS1uYW1lc3BhY2Uge3sgLlJlbGVhc2UuTmFtZXNwYWNlIH19IC1sICJhcHA9e3sgdGVtcGxhdGUgImtpYmFuYS5uYW1lIiAuIH19LHJlbGVhc2U9e3sgLlJlbGVhc2UuTmFtZSB9fSIgLW8ganNvbnBhdGg9InsuaXRlbXNbMF0ubWV0YWRhdGEubmFtZX0iKQogICAgZWNobyAiVmlzaXQgaHR0cDovLzEyNy4wLjAuMTo1NjAxIHRvIHVzZSBLaWJhbmEiCiAgICBrdWJlY3RsIHBvcnQtZm9yd2FyZCAtLW5hbWVzcGFjZSB7eyAuUmVsZWFzZS5OYW1lc3BhY2UgfX0gJFBPRF9OQU1FIDU2MDE6NTYwMQogICAge3stIGVuZCB9fQo="
        },
        {
          "filePath": "templates/_helpers.tpl",
          "fileContents": "e3svKiB2aW06IHNldCBmaWxldHlwZT1tdXN0YWNoZTogKi99fQp7ey8qCkV4cGFuZCB0aGUgbmFtZSBvZiB0aGUgY2hhcnQuCiovfX0Ke3stIGRlZmluZSAia2liYW5hLm5hbWUiIC19fQp7ey0gZGVmYXVsdCAuQ2hhcnQuTmFtZSAuVmFsdWVzLm5hbWVPdmVycmlkZSB8IHRydW5jIDYzIHwgdHJpbVN1ZmZpeCAiLSIgLX19Cnt7LSBlbmQgLX19Cgp7ey8qCkNyZWF0ZSBhIGRlZmF1bHQgZnVsbHkgcXVhbGlmaWVkIGFwcCBuYW1lLgpXZSB0cnVuY2F0ZSBhdCA2MyBjaGFycyBiZWNhdXNlIHNvbWUgS3ViZXJuZXRlcyBuYW1lIGZpZWxkcyBhcmUgbGltaXRlZCB0byB0aGlzIChieSB0aGUgRE5TIG5hbWluZyBzcGVjKS4KSWYgcmVsZWFzZSBuYW1lIGNvbnRhaW5zIGNoYXJ0IG5hbWUgaXQgd2lsbCBiZSB1c2VkIGFzIGEgZnVsbCBuYW1lLgoqL319Cnt7LSBkZWZpbmUgImtpYmFuYS5mdWxsbmFtZSIgLX19Cnt7LSBpZiAuVmFsdWVzLmZ1bGxuYW1lT3ZlcnJpZGUgLX19Cnt7LSAuVmFsdWVzLmZ1bGxuYW1lT3ZlcnJpZGUgfCB0cnVuYyA2MyB8IHRyaW1TdWZmaXggIi0iIC19fQp7ey0gZWxzZSAtfX0Ke3stICRuYW1lIDo9IGRlZmF1bHQgLkNoYXJ0Lk5hbWUgLlZhbHVlcy5uYW1lT3ZlcnJpZGUgLX19Cnt7LSBpZiBjb250YWlucyAkbmFtZSAuUmVsZWFzZS5OYW1lIC19fQp7ey0gcHJpbnRmIC5SZWxlYXNlLk5hbWUgfCB0cnVuYyA2MyB8IHRyaW1TdWZmaXggIi0iIC19fQp7ey0gZWxzZSAtfX0Ke3stIHByaW50ZiAiJXMtJXMiIC5SZWxlYXNlLk5hbWUgJG5hbWUgfCB0cnVuYyA2MyB8IHRyaW1TdWZmaXggIi0iIC19fQp7ey0gZW5kIC19fQp7ey0gZW5kIC19fQp7ey0gZW5kIC19fQoKe3svKgpDcmVhdGUgdGhlIG5hbWUgb2YgdGhlIHNlcnZpY2UgYWNjb3VudCB0byB1c2UKKi99fQp7ey0gZGVmaW5lICJraWJhbmEuc2VydmljZUFjY291bnROYW1lIiAtfX0Ke3stIGlmIC5WYWx1ZXMuc2VydmljZUFjY291bnQuY3JlYXRlIC19fQp7eyBkZWZhdWx0IChpbmNsdWRlICJraWJhbmEuZnVsbG5hbWUiIC4pIC5WYWx1ZXMuc2VydmljZUFjY291bnQubmFtZSB9fQp7ey0gZWxzZSAtfX0Ke3stIGlmIC5WYWx1ZXMuc2VydmljZUFjY291bnROYW1lIC19fQp7ey0gLlZhbHVlcy5zZXJ2aWNlQWNjb3VudE5hbWUgfX0Ke3stIGVsc2UgLX19Cnt7IGRlZmF1bHQgImRlZmF1bHQiIC5WYWx1ZXMuc2VydmljZUFjY291bnQubmFtZSB9fQp7ey0gZW5kIC19fQp7ey0gZW5kIC19fQp7ey0gZW5kIC19fQo="
        },
        {
          "filePath": "templates/configmap-dashboardimport.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMuZGFzaGJvYXJkSW1wb3J0LmRhc2hib2FyZHMgfX0KYXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHt7IHRlbXBsYXRlICJraWJhbmEuZnVsbG5hbWUiIC4gfX0taW1wb3J0c2NyaXB0CiAgbGFiZWxzOgogICAgYXBwOiB7eyB0ZW1wbGF0ZSAia2liYW5hLm5hbWUiIC4gfX0KICAgIGNoYXJ0OiAie3sgLkNoYXJ0Lk5hbWUgfX0te3sgLkNoYXJ0LlZlcnNpb24gfX0iCiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQpkYXRhOgogIGRhc2hib2FyZEltcG9ydC5zaDogfAogICAgIyEvdXNyL2Jpbi9lbnYgYmFzaAogICAgIwogICAgIyBraWJhbmEgZGFzaGJvYXJkIGltcG9ydCBzY3JpcHQKICAgICMKCiAgICBjZCAva2liYW5hZGFzaGJvYXJkcwoKICAgIGVjaG8gIlN0YXJ0aW5nIEtpYmFuYS4uLiIKCiAgICAvdXNyL2xvY2FsL2Jpbi9raWJhbmEtZG9ja2VyICRAICYKCiAgICBlY2hvICJXYWl0aW5nIHVwIHRvIHt7IC5WYWx1ZXMuZGFzaGJvYXJkSW1wb3J0LnRpbWVvdXQgfX0gc2Vjb25kcyBmb3IgS2liYW5hIHRvIGdldCBpbiBncmVlbiBvdmVyYWxsIHN0YXRlLi4uIgoKICAgIGZvciBpIGluIHsxLi57eyAuVmFsdWVzLmRhc2hib2FyZEltcG9ydC50aW1lb3V0IH19fTsgZG8KICAgICAgY3VybCAtcyBsb2NhbGhvc3Q6NTYwMS9hcGkvc3RhdHVzIHwgcHl0aG9uIC1jICdpbXBvcnQgc3lzLCBqc29uOyBwcmludCBqc29uLmxvYWQoc3lzLnN0ZGluKVsic3RhdHVzIl1bIm92ZXJhbGwiXVsic3RhdGUiXScgMj4gL2Rldi9udWxsIHwgZ3JlcCBncmVlbiA+IC9kZXYvbnVsbCAmJiBicmVhayB8fCBzbGVlcCAxCiAgICBkb25lCgogICAgZm9yIERBU0hCT0FSRF9GSUxFIGluICo7IGRvCiAgICAgIGVjaG8gLWUgIkltcG9ydGluZyAke0RBU0hCT0FSRF9GSUxFfSBkYXNoYm9hcmQuLi4iCgogICAgICBpZiAhIHB5dGhvbiAtYyAnaW1wb3J0IHN5cywganNvbjsgcHJpbnQganNvbi5sb2FkKHN5cy5zdGRpbiknIDwgIiR7REFTSEJPQVJEX0ZJTEV9IiAmPiAvZGV2L251bGwgOyB0aGVuCiAgICAgICAgZWNobyAiJHtEQVNIQk9BUkRfRklMRX0gaXMgbm90IHZhbGlkIEpTT04sIGFzc3VtaW5nIGl0J3MgYW4gVVJMLi4uIgogICAgICAgIFRNUF9GSUxFPSIkKG1rdGVtcCkiCiAgICAgICAgY3VybCAtcyAkKGNhdCAke0RBU0hCT0FSRF9GSUxFfSkgPiAke1RNUF9GSUxFfQogICAgICAgIGN1cmwgLXYge3sgaWYgLlZhbHVlcy5kYXNoYm9hcmRJbXBvcnQueHBhY2thdXRoLmVuYWJsZWQgfX0tLXVzZXIge3sgLlZhbHVlcy5kYXNoYm9hcmRJbXBvcnQueHBhY2thdXRoLnVzZXJuYW1lIH19Ont7IC5WYWx1ZXMuZGFzaGJvYXJkSW1wb3J0LnhwYWNrYXV0aC5wYXNzd29yZCB9fXt7IGVuZCB9fSAtcyAtLWNvbm5lY3QtdGltZW91dCA2MCAtLW1heC10aW1lIDYwIC1YUE9TVCBsb2NhbGhvc3Q6NTYwMS9hcGkva2liYW5hL2Rhc2hib2FyZHMvaW1wb3J0P2ZvcmNlPXRydWUgLUggJ2tibi14c3JmOnRydWUnIC1IICdDb250ZW50LXR5cGU6YXBwbGljYXRpb24vanNvbicgLWQgQCR7VE1QX0ZJTEV9CiAgICAgICAgcm0gJHtUTVBfRklMRX0KICAgICAgZWxzZQogICAgICAgIGVjaG8gIlZhbGlkIEpTT04gZm91bmQgaW4gJHtEQVNIQk9BUkRfRklMRX0sIGltcG9ydGluZy4uLiIKICAgICAgICBjdXJsIC12IHt7IGlmIC5WYWx1ZXMuZGFzaGJvYXJkSW1wb3J0LnhwYWNrYXV0aC5lbmFibGVkIH19LS11c2VyIHt7IC5WYWx1ZXMuZGFzaGJvYXJkSW1wb3J0LnhwYWNrYXV0aC51c2VybmFtZSB9fTp7eyAuVmFsdWVzLmRhc2hib2FyZEltcG9ydC54cGFja2F1dGgucGFzc3dvcmQgfX17eyBlbmQgfX0gLXMgLS1jb25uZWN0LXRpbWVvdXQgNjAgLS1tYXgtdGltZSA2MCAtWFBPU1QgbG9jYWxob3N0OjU2MDEvYXBpL2tpYmFuYS9kYXNoYm9hcmRzL2ltcG9ydD9mb3JjZT10cnVlIC1IICdrYm4teHNyZjp0cnVlJyAtSCAnQ29udGVudC10eXBlOmFwcGxpY2F0aW9uL2pzb24nIC1kIEAuLyR7REFTSEJPQVJEX0ZJTEV9CiAgICAgIGZpCgogICAgICBpZiBbICIkPyIgIT0gIjAiIF07IHRoZW4KICAgICAgICBlY2hvIC1lICJcbkltcG9ydCBvZiAke0RBU0hCT0FSRF9GSUxFfSBkYXNoYm9hcmQgZmFpbGVkLi4uIEV4aXRpbmcuLi4iCiAgICAgICAgZXhpdCAxCiAgICAgIGVsc2UKICAgICAgICBlY2hvIC1lICJcbkltcG9ydCBvZiAke0RBU0hCT0FSRF9GSUxFfSBkYXNoYm9hcmQgZmluaXNoZWQgOi0pIgogICAgICBmaQoKICAgIGRvbmUKLS0tCmFwaVZlcnNpb246IHYxCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAia2liYW5hLmZ1bGxuYW1lIiAuIH19LWRhc2hib2FyZHMKICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJraWJhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6ICJ7eyAuQ2hhcnQuTmFtZSB9fS17eyAuQ2hhcnQuVmVyc2lvbiB9fSIKICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0KICAgIGhlcml0YWdlOiB7eyAuUmVsZWFzZS5TZXJ2aWNlIH19CmRhdGE6Cnt7LSByYW5nZSAka2V5LCAkdmFsdWUgOj0gLlZhbHVlcy5kYXNoYm9hcmRJbXBvcnQuZGFzaGJvYXJkcyB9fQogIHt7ICRrZXkgfX06IHwtCnt7ICR2YWx1ZSB8IGluZGVudCA0IH19Cnt7LSBlbmQgLX19Cnt7LSBlbmQgLX19Cg=="
        },
        {
          "filePath": "templates/configmap.yaml",
          "fileContents": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHt7IHRlbXBsYXRlICJraWJhbmEuZnVsbG5hbWUiIC4gfX0KICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJraWJhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6ICJ7eyAuQ2hhcnQuTmFtZSB9fS17eyAuQ2hhcnQuVmVyc2lvbiB9fSIKICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0KICAgIGhlcml0YWdlOiB7eyAuUmVsZWFzZS5TZXJ2aWNlIH19CmRhdGE6Cnt7LSByYW5nZSAka2V5LCAkdmFsdWUgOj0gLlZhbHVlcy5maWxlcyB9fQogIHt7ICRrZXkgfX06IHwKe3sgdG9ZYW1sICR2YWx1ZSB8IGRlZmF1bHQgInt9IiB8IGluZGVudCA0IH19Cnt7LSBlbmQgLX19Cg=="
        },
        {
          "filePath": "templates/deployment.yaml",
          "fileContents": ""
        },
        {
          "filePath": "templates/ingress.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMuaW5ncmVzcy5lbmFibGVkIC19fQp7ey0gJHNlcnZpY2VOYW1lIDo9IGluY2x1ZGUgImtpYmFuYS5mdWxsbmFtZSIgLiAtfX0Ke3stICRzZXJ2aWNlUG9ydCA6PSAuVmFsdWVzLnNlcnZpY2UuZXh0ZXJuYWxQb3J0IC19fQphcGlWZXJzaW9uOiBleHRlbnNpb25zL3YxYmV0YTEKa2luZDogSW5ncmVzcwptZXRhZGF0YToKICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJraWJhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6ICJ7eyAuQ2hhcnQuTmFtZSB9fS17eyAuQ2hhcnQuVmVyc2lvbiB9fSIKICAgIGhlcml0YWdlOiB7eyAuUmVsZWFzZS5TZXJ2aWNlIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgbmFtZToge3sgdGVtcGxhdGUgImtpYmFuYS5mdWxsbmFtZSIgLiB9fQogIGFubm90YXRpb25zOgogICAge3stIHJhbmdlICRrZXksICR2YWx1ZSA6PSAuVmFsdWVzLmluZ3Jlc3MuYW5ub3RhdGlvbnMgfX0KICAgICAge3sgJGtleSB9fToge3sgJHZhbHVlIHwgcXVvdGUgfX0KICAgIHt7LSBlbmQgfX0Kc3BlYzoKICBydWxlczoKICAgIHt7LSByYW5nZSAuVmFsdWVzLmluZ3Jlc3MuaG9zdHMgfX0KICAgICAge3stICR1cmwgOj0gc3BsaXRMaXN0ICIvIiAuIH19CiAgICAtIGhvc3Q6IHt7IGZpcnN0ICR1cmwgfX0KICAgICAgaHR0cDoKICAgICAgICBwYXRoczoKICAgICAgICAgIC0gcGF0aDogL3t7IHJlc3QgJHVybCB8IGpvaW4gIi8iIH19CiAgICAgICAgICAgIGJhY2tlbmQ6CiAgICAgICAgICAgICAgc2VydmljZU5hbWU6IHt7ICRzZXJ2aWNlTmFtZSB9fQogICAgICAgICAgICAgIHNlcnZpY2VQb3J0OiB7eyAkc2VydmljZVBvcnQgfX0KICAgIHt7LSBlbmQgLX19CiAge3stIGlmIC5WYWx1ZXMuaW5ncmVzcy50bHMgfX0KICB0bHM6Cnt7IHRvWWFtbCAuVmFsdWVzLmluZ3Jlc3MudGxzIHwgaW5kZW50IDQgfX0KICB7ey0gZW5kIC19fQp7ey0gZW5kIC19fQo="
        },
        {
          "filePath": "templates/service.yaml",
          "fileContents": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJraWJhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6IHt7IC5DaGFydC5OYW1lIH19LXt7IC5DaGFydC5WZXJzaW9uIHwgcmVwbGFjZSAiKyIgIl8iIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQogIHt7LSByYW5nZSAka2V5LCAkdmFsdWUgOj0gLlZhbHVlcy5zZXJ2aWNlLmxhYmVscyB9fQogICAge3sgJGtleSB9fToge3sgJHZhbHVlIHwgcXVvdGUgfX0KICB7ey0gZW5kIH19CiAgbmFtZToge3sgdGVtcGxhdGUgImtpYmFuYS5mdWxsbmFtZSIgLiB9fQogIHt7LSB3aXRoIC5WYWx1ZXMuc2VydmljZS5hbm5vdGF0aW9ucyB9fQogIGFubm90YXRpb25zOgogICAge3stIHJhbmdlICRrZXksICR2YWx1ZSA6PSAuIH19CiAgICAgIHt7ICRrZXkgfX06IHt7ICR2YWx1ZSB8IHF1b3RlIH19CiAgICB7ey0gZW5kIH19CiAge3stIGVuZCB9fQpzcGVjOgogIHt7LSBpZiAuVmFsdWVzLnNlcnZpY2UubG9hZEJhbGFuY2VyU291cmNlUmFuZ2VzIH19CiAgbG9hZEJhbGFuY2VyU291cmNlUmFuZ2VzOgogICAge3stIHJhbmdlICRjaWRyIDo9IC5WYWx1ZXMuc2VydmljZS5sb2FkQmFsYW5jZXJTb3VyY2VSYW5nZXMgfX0KICAgIC0ge3sgJGNpZHIgfX0KICAgIHt7LSBlbmQgfX0KICB7ey0gZW5kIH19CiAgdHlwZToge3sgLlZhbHVlcy5zZXJ2aWNlLnR5cGUgfX0KICBwb3J0czoKICAgIC0gcG9ydDoge3sgLlZhbHVlcy5zZXJ2aWNlLmV4dGVybmFsUG9ydCB9fQp7ey0gaWYgbm90IC5WYWx1ZXMuYXV0aFByb3h5RW5hYmxlZCB9fQogICAgICB0YXJnZXRQb3J0OiB7eyAuVmFsdWVzLnNlcnZpY2UuaW50ZXJuYWxQb3J0IH19Cnt7LSBlbHNlIH19CiAgICAgIHRhcmdldFBvcnQ6IHt7IC5WYWx1ZXMuc2VydmljZS5hdXRoUHJveHlQb3J0IH19Cnt7LSBlbmQgfX0KICAgICAgcHJvdG9jb2w6IFRDUAp7eyBpZiAoYW5kIChlcSAuVmFsdWVzLnNlcnZpY2UudHlwZSAiTm9kZVBvcnQiKSAobm90IChlbXB0eSAuVmFsdWVzLnNlcnZpY2Uubm9kZVBvcnQpKSkgfX0KICAgICAgbm9kZVBvcnQ6IHt7IC5WYWx1ZXMuc2VydmljZS5ub2RlUG9ydCB9fQp7eyBlbmQgfX0Ke3stIGlmIC5WYWx1ZXMuc2VydmljZS5leHRlcm5hbElQcyB9fQogIGV4dGVybmFsSVBzOgp7eyB0b1lhbWwgLlZhbHVlcy5zZXJ2aWNlLmV4dGVybmFsSVBzIHwgaW5kZW50IDQgfX0Ke3stIGVuZCB9fQogIHNlbGVjdG9yOgogICAgYXBwOiB7eyB0ZW1wbGF0ZSAia2liYW5hLm5hbWUiIC4gfX0KICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0Ke3stIGlmIC5WYWx1ZXMuc2VydmljZS5sb2FkQmFsYW5jZXJJUCB9fQogIGxvYWRCYWxhbmNlcklQOiB7eyAuVmFsdWVzLnNlcnZpY2UubG9hZEJhbGFuY2VySVAgfX0Ke3stIGVuZCB9fQo="
        },
        {
          "filePath": "templates/serviceaccount.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMuc2VydmljZUFjY291bnQuY3JlYXRlIC19fQphcGlWZXJzaW9uOiB2MQpraW5kOiBTZXJ2aWNlQWNjb3VudAptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAia2liYW5hLnNlcnZpY2VBY2NvdW50TmFtZSIgLiB9fQogIGxhYmVsczoKICAgIGFwcDoge3sgdGVtcGxhdGUgImtpYmFuYS5uYW1lIiAuIH19CiAgICBjaGFydDoge3sgLkNoYXJ0Lk5hbWUgfX0te3sgLkNoYXJ0LlZlcnNpb24gfX0KICAgIGhlcml0YWdlOiB7eyAuUmVsZWFzZS5TZXJ2aWNlIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19Cnt7LSBlbmQgLX19Cg=="
        },
        {
          "filePath": "templates/volume-claim.yaml",
          "fileContents": "e3stIGlmIGFuZCAuVmFsdWVzLnBsdWdpbnMuZW5hYmxlZCAuVmFsdWVzLnBlcnNpc3RlbnRWb2x1bWVDbGFpbS5lbmFibGVkIC19fQp7ey0gaWYgbm90IC5WYWx1ZXMucGVyc2lzdGVudFZvbHVtZUNsYWltLmV4aXN0aW5nQ2xhaW0gLX19CmFwaVZlcnNpb246ICJ2MSIKa2luZDogIlBlcnNpc3RlbnRWb2x1bWVDbGFpbSIKbWV0YWRhdGE6Cnt7LSBpZiAuVmFsdWVzLnBlcnNpc3RlbnRWb2x1bWVDbGFpbS5hbm5vdGF0aW9ucyB9fQogIGFubm90YXRpb25zOgp7eyB0b1lhbWwgLlZhbHVlcy5wZXJzaXN0ZW50Vm9sdW1lQ2xhaW0uYW5ub3RhdGlvbnMgfCBpbmRlbnQgNCB9fQp7ey0gZW5kIH19CiAgbGFiZWxzOgogICAgYXBwOiB7eyB0ZW1wbGF0ZSAia2liYW5hLm5hbWUiIC4gfX0KICAgIGNoYXJ0OiB7eyAuQ2hhcnQuTmFtZSB9fS17eyAuQ2hhcnQuVmVyc2lvbiB9fQogICAgY29tcG9uZW50OiAie3sgLlZhbHVlcy5wZXJzaXN0ZW50Vm9sdW1lQ2xhaW0ubmFtZSB9fSIKICAgIGhlcml0YWdlOiB7eyAuUmVsZWFzZS5TZXJ2aWNlIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgbmFtZToge3sgdGVtcGxhdGUgImtpYmFuYS5mdWxsbmFtZSIgLiB9fQpzcGVjOgogIGFjY2Vzc01vZGVzOgp7eyB0b1lhbWwgLlZhbHVlcy5wZXJzaXN0ZW50Vm9sdW1lQ2xhaW0uYWNjZXNzTW9kZXMgfCBpbmRlbnQgNCB9fQp7ey0gaWYgLlZhbHVlcy5wZXJzaXN0ZW50Vm9sdW1lQ2xhaW0uc3RvcmFnZUNsYXNzIH19Cnt7LSBpZiAoZXEgIi0iIC5WYWx1ZXMucGVyc2lzdGVudFZvbHVtZUNsYWltLnN0b3JhZ2VDbGFzcykgfX0KICBzdG9yYWdlQ2xhc3NOYW1lOiAiIgp7ey0gZWxzZSB9fQogIHN0b3JhZ2VDbGFzc05hbWU6ICJ7eyAuVmFsdWVzLnBlcnNpc3RlbnRWb2x1bWVDbGFpbS5zdG9yYWdlQ2xhc3MgfX0iCnt7LSBlbmQgfX0Ke3stIGVuZCB9fQogIHJlc291cmNlczoKICAgIHJlcXVlc3RzOgogICAgICBzdG9yYWdlOiAie3sgLlZhbHVlcy5wZXJzaXN0ZW50Vm9sdW1lQ2xhaW0uc2l6ZSB9fSIKe3stIGVuZCAtfX0Ke3stIGVuZCAtfX0K"
        },
        {
          "filePath": "values.yaml",
          "fileContents": "aW1hZ2U6CiAgcmVwb3NpdG9yeTogImRvY2tlci5lbGFzdGljLmNvL2tpYmFuYS9raWJhbmEtb3NzIgogIHRhZzogIjYuNS40IgogIHB1bGxQb2xpY3k6ICJJZk5vdFByZXNlbnQiCgpjb21tYW5kbGluZToKICBhcmdzOiBbXQoKZW52OiB7fQogICMgQWxsIEtpYmFuYSBjb25maWd1cmF0aW9uIG9wdGlvbnMgYXJlIGFkanVzdGFibGUgdmlhIGVudiB2YXJzLgogICMgVG8gYWRqdXN0IGEgY29uZmlnIG9wdGlvbiB0byBhbiBlbnYgdmFyIHVwcGVyY2FzZSArIHJlcGxhY2UgYC5gIHdpdGggYF9gCiAgIyBSZWY6IGh0dHBzOi8vd3d3LmVsYXN0aWMuY28vZ3VpZGUvZW4va2liYW5hL2N1cnJlbnQvc2V0dGluZ3MuaHRtbAogICMKICAjIEVMQVNUSUNTRUFSQ0hfVVJMOiBodHRwOi8vZWxhc3RpY3NlYXJjaC1jbGllbnQ6OTIwMAogICMgU0VSVkVSX1BPUlQ6IDU2MDEKICAjIExPR0dJTkdfVkVSQk9TRTogInRydWUiCiAgIyBTRVJWRVJfREVGQVVMVFJPVVRFOiAiL2FwcC9raWJhbmEiCgpmaWxlczoKICBraWJhbmEueW1sOgogICAgIyMgRGVmYXVsdCBLaWJhbmEgY29uZmlndXJhdGlvbiBmcm9tIGtpYmFuYS1kb2NrZXIuCiAgICBzZXJ2ZXIubmFtZToga2liYW5hCiAgICBzZXJ2ZXIuaG9zdDogIjAiCiAgICBlbGFzdGljc2VhcmNoLnVybDogaHR0cDovL2VsYXN0aWNzZWFyY2g6OTIwMAoKICAgICMjIEN1c3RvbSBjb25maWcgcHJvcGVydGllcyBiZWxvdwogICAgIyMgUmVmOiBodHRwczovL3d3dy5lbGFzdGljLmNvL2d1aWRlL2VuL2tpYmFuYS9jdXJyZW50L3NldHRpbmdzLmh0bWwKICAgICMgc2VydmVyLnBvcnQ6IDU2MDEKICAgICMgbG9nZ2luZy52ZXJib3NlOiAidHJ1ZSIKICAgICMgc2VydmVyLmRlZmF1bHRSb3V0ZTogIi9hcHAva2liYW5hIgoKZGVwbG95bWVudDoKICBhbm5vdGF0aW9uczoge30KCnNlcnZpY2U6CiAgdHlwZTogQ2x1c3RlcklQCiAgZXh0ZXJuYWxQb3J0OiA0NDMKICBpbnRlcm5hbFBvcnQ6IDU2MDEKICAjIGF1dGhQcm94eVBvcnQ6IDU2MDIgVG8gYmUgdXNlZCB3aXRoIGF1dGhQcm94eUVuYWJsZWQgYW5kIGEgcHJveHkgZXh0cmFDb250YWluZXIKICAjIyBFeHRlcm5hbCBJUCBhZGRyZXNzZXMgb2Ygc2VydmljZQogICMjIERlZmF1bHQ6IG5pbAogICMjCiAgIyBleHRlcm5hbElQczoKICAjIC0gMTkyLjE2OC4wLjEKICAjCiAgIyMgTG9hZEJhbGFuY2VyIElQIGlmIHNlcnZpY2UudHlwZSBpcyBMb2FkQmFsYW5jZXIKICAjIyBEZWZhdWx0OiBuaWwKICAjIwogICMgbG9hZEJhbGFuY2VySVA6IDEwLjIuMi4yCiAgYW5ub3RhdGlvbnM6IHt9CiAgICAjIEFubm90YXRpb24gZXhhbXBsZTogc2V0dXAgc3NsIHdpdGggYXdzIGNlcnQgd2hlbiBzZXJ2aWNlLnR5cGUgaXMgTG9hZEJhbGFuY2VyCiAgICAjIHNlcnZpY2UuYmV0YS5rdWJlcm5ldGVzLmlvL2F3cy1sb2FkLWJhbGFuY2VyLXNzbC1jZXJ0OiBhcm46YXdzOmFjbTp1cy1lYXN0LTE6RVhBTVBMRV9DRVJUCiAgbGFiZWxzOiB7fQogICAgIyMgTGFiZWwgZXhhbXBsZTogc2hvdyBzZXJ2aWNlIFVSTCBpbiBga3ViZWN0bCBjbHVzdGVyLWluZm9gCiAgICAjIGt1YmVybmV0ZXMuaW8vY2x1c3Rlci1zZXJ2aWNlOiAidHJ1ZSIKICAjIyBMaW1pdCBsb2FkIGJhbGFuY2VyIHNvdXJjZSBpcHMgdG8gbGlzdCBvZiBDSURScyAod2hlcmUgYXZhaWxhYmxlKQogICMgbG9hZEJhbGFuY2VyU291cmNlUmFuZ2VzOiBbXQoKaW5ncmVzczoKICBlbmFibGVkOiBmYWxzZQogICMgaG9zdHM6CiAgICAjIC0ga2liYW5hLmxvY2FsaG9zdC5sb2NhbGRvbWFpbgogICAgIyAtIGxvY2FsaG9zdC5sb2NhbGRvbWFpbi9raWJhbmEKICAjIGFubm90YXRpb25zOgogICMgICBrdWJlcm5ldGVzLmlvL2luZ3Jlc3MuY2xhc3M6IG5naW54CiAgIyAgIGt1YmVybmV0ZXMuaW8vdGxzLWFjbWU6ICJ0cnVlIgogICMgdGxzOgogICAgIyAtIHNlY3JldE5hbWU6IGNoYXJ0LWV4YW1wbGUtdGxzCiAgICAjICAgaG9zdHM6CiAgICAjICAgICAtIGNoYXJ0LWV4YW1wbGUubG9jYWwKCnNlcnZpY2VBY2NvdW50OgogICMgU3BlY2lmaWVzIHdoZXRoZXIgYSBzZXJ2aWNlIGFjY291bnQgc2hvdWxkIGJlIGNyZWF0ZWQKICBjcmVhdGU6IGZhbHNlCiAgIyBUaGUgbmFtZSBvZiB0aGUgc2VydmljZSBhY2NvdW50IHRvIHVzZS4KICAjIElmIG5vdCBzZXQgYW5kIGNyZWF0ZSBpcyB0cnVlLCBhIG5hbWUgaXMgZ2VuZXJhdGVkIHVzaW5nIHRoZSBmdWxsbmFtZSB0ZW1wbGF0ZQogICMgSWYgc2V0IGFuZCBjcmVhdGUgaXMgZmFsc2UsIHRoZSBzZXJ2aWNlIGFjY291bnQgbXVzdCBiZSBleGlzdGluZwogIG5hbWU6CgpsaXZlbmVzc1Byb2JlOgogIGVuYWJsZWQ6IGZhbHNlCiAgaW5pdGlhbERlbGF5U2Vjb25kczogMzAKICB0aW1lb3V0U2Vjb25kczogMTAKCnJlYWRpbmVzc1Byb2JlOgogIGVuYWJsZWQ6IGZhbHNlCiAgaW5pdGlhbERlbGF5U2Vjb25kczogMzAKICB0aW1lb3V0U2Vjb25kczogMTAKICBwZXJpb2RTZWNvbmRzOiAxMAogIHN1Y2Nlc3NUaHJlc2hvbGQ6IDUKCiMgRW5hYmxlIGFuIGF1dGhwcm94eS4gU3BlY2lmeSBjb250YWluZXIgaW4gZXh0cmFDb250YWluZXJzCmF1dGhQcm94eUVuYWJsZWQ6IGZhbHNlCgpleHRyYUNvbnRhaW5lcnM6IHwKIyAtIG5hbWU6IHByb3h5CiMgICBpbWFnZTogcXVheS5pby9nYW1ib2w5OS9rZXljbG9hay1wcm94eTpsYXRlc3QKIyAgIGFyZ3M6CiMgICAgIC0gLS1yZXNvdXJjZT11cmk9LyoKIyAgICAgLSAtLWRpc2NvdmVyeS11cmw9aHR0cHM6Ly9kaXNjb3ZlcnktdXJsCiMgICAgIC0gLS1jbGllbnQtaWQ9Y2xpZW50CiMgICAgIC0gLS1jbGllbnQtc2VjcmV0PXNlY3JldAojICAgICAtIC0tbGlzdGVuPTAuMC4wLjA6NTYwMgojICAgICAtIC0tdXBzdHJlYW0tdXJsPWh0dHA6Ly8xMjcuMC4wLjE6NTYwMQojICAgcG9ydHM6CiMgICAgIC0gbmFtZTogd2ViCiMgICAgICAgY29udGFpbmVyUG9ydDogOTA5MApyZXNvdXJjZXM6IHt9CiAgIyBsaW1pdHM6CiAgIyAgIGNwdTogMTAwbQogICMgICBtZW1vcnk6IDMwME1pCiAgIyByZXF1ZXN0czoKICAjICAgY3B1OiAxMDBtCiAgIyAgIG1lbW9yeTogMzAwTWkKCnByaW9yaXR5Q2xhc3NOYW1lOiAiIgoKIyBBZmZpbml0eSBmb3IgcG9kIGFzc2lnbm1lbnQKIyBSZWY6IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vYXNzaWduLXBvZC1ub2RlLyNhZmZpbml0eS1hbmQtYW50aS1hZmZpbml0eQojIGFmZmluaXR5OiB7fQoKIyBUb2xlcmF0aW9ucyBmb3IgcG9kIGFzc2lnbm1lbnQKIyBSZWY6IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vdGFpbnQtYW5kLXRvbGVyYXRpb24vCnRvbGVyYXRpb25zOiBbXQoKIyBOb2RlIGxhYmVscyBmb3IgcG9kIGFzc2lnbm1lbnQKIyBSZWY6IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL3VzZXItZ3VpZGUvbm9kZS1zZWxlY3Rpb24vCm5vZGVTZWxlY3Rvcjoge30KCnBvZEFubm90YXRpb25zOiB7fQpyZXBsaWNhQ291bnQ6IDEKcmV2aXNpb25IaXN0b3J5TGltaXQ6IDMKCiMgVG8gZXhwb3J0IGEgZGFzaGJvYXJkIGZyb20gYSBydW5uaW5nIEtpYmFuYSA2LjMueCB1c2U6CiMgY3VybCAtLXVzZXIgPHVzZXJuYW1lPjo8cGFzc3dvcmQ+IC1YR0VUIGh0dHBzOi8va2liYW5hLnlvdXJkb21haW4uY29tOjU2MDEvYXBpL2tpYmFuYS9kYXNoYm9hcmRzL2V4cG9ydD9kYXNoYm9hcmQ9PHNvbWUtZGFzaGJvYXJkLXV1aWQ+ID4gbXktZGFzaGJvYXJkLmpzb24KIyBBIGRhc2hib2FyZCBpcyBkZWZpbmVkIGJ5IGEgbmFtZSBhbmQgYSBzdHJpbmcgd2l0aCB0aGUganNvbiBwYXlsb2FkIG9yIHRoZSBkb3dubG9hZCB1cmwKZGFzaGJvYXJkSW1wb3J0OgogIHRpbWVvdXQ6IDYwCiAgeHBhY2thdXRoOgogICAgZW5hYmxlZDogZmFsc2UKICAgIHVzZXJuYW1lOiBteXVzZXIKICAgIHBhc3N3b3JkOiBteXBhc3MKICBkYXNoYm9hcmRzOiB7fQogICAgIyBrOHM6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9tb25vdGVrL2tpYmFuYS1kYXNoYm9hcmRzL21hc3Rlci9rOHMtZmx1ZW50ZC1lbGFzdGljc2VhcmNoLmpzb24KCiMgTGlzdCBvZiBwbHVnaW5zIHRvIGluc3RhbGwgdXNpbmcgaW5pdENvbnRhaW5lcgojIE5PVEUgOiBXZSBub3RpY2UgdGhhdCBsb3dlciByZXNvdXJjZSBjb25zdHJhaW50cyBnaXZlbiB0byB0aGUgY2hhcnQgKyBwbHVnaW5zIGFyZSBsaWtlbHkgbm90IGdvaW5nIHRvIHdvcmsgd2VsbC4KcGx1Z2luczoKICAjIHNldCB0byB0cnVlIHRvIGVuYWJsZSBwbHVnaW5zIGluc3RhbGxhdGlvbgogIGVuYWJsZWQ6IGZhbHNlCiAgIyBzZXQgdG8gdHJ1ZSB0byByZW1vdmUgYWxsIGtpYmFuYSBwbHVnaW5zIGJlZm9yZSBpbnN0YWxsYXRpb24KICByZXNldDogZmFsc2UKICAjIFVzZSA8cGx1Z2luX25hbWUsdmVyc2lvbix1cmw+IHRvIGFkZC91cGdyYWRlIHBsdWdpbgogIHZhbHVlczoKICAgICMgLSBlbGFzdGFsZXJ0LWtpYmFuYS1wbHVnaW4sMS4wLjEsaHR0cHM6Ly9naXRodWIuY29tL2JpdHNlbnNvci9lbGFzdGFsZXJ0LWtpYmFuYS1wbHVnaW4vcmVsZWFzZXMvZG93bmxvYWQvMS4wLjEvZWxhc3RhbGVydC1raWJhbmEtcGx1Z2luLTEuMC4xLTYuNC4yLnppcAogICAgIyAtIGxvZ3RyYWlsLDAuMS4zMCxodHRwczovL2dpdGh1Yi5jb20vc2l2YXNhbXlrL2xvZ3RyYWlsL3JlbGVhc2VzL2Rvd25sb2FkL3YwLjEuMzAvbG9ndHJhaWwtNi40LjItMC4xLjMwLnppcAogICAgIyAtIG90aGVyX3BsdWdpbgoKcGVyc2lzdGVudFZvbHVtZUNsYWltOgogICMgc2V0IHRvIHRydWUgdG8gdXNlIHB2YwogIGVuYWJsZWQ6IGZhbHNlCiAgIyBzZXQgdG8gdHJ1ZSB0byB1c2UgeW91IG93biBwdmMKICBleGlzdGluZ0NsYWltOiBmYWxzZQogIGFubm90YXRpb25zOiB7fQoKICBhY2Nlc3NNb2RlczoKICAgIC0gUmVhZFdyaXRlT25jZQogIHNpemU6ICI1R2kiCiAgIyMgSWYgZGVmaW5lZCwgc3RvcmFnZUNsYXNzTmFtZTogPHN0b3JhZ2VDbGFzcz4KICAjIyBJZiBzZXQgdG8gIi0iLCBzdG9yYWdlQ2xhc3NOYW1lOiAiIiwgd2hpY2ggZGlzYWJsZXMgZHluYW1pYyBwcm92aXNpb25pbmcKICAjIyBJZiB1bmRlZmluZWQgKHRoZSBkZWZhdWx0KSBvciBzZXQgdG8gbnVsbCwgbm8gc3RvcmFnZUNsYXNzTmFtZSBzcGVjIGlzCiAgIyMgICBzZXQsIGNob29zaW5nIHRoZSBkZWZhdWx0IHByb3Zpc2lvbmVyLiAgKGdwMiBvbiBBV1MsIHN0YW5kYXJkIG9uCiAgIyMgICBHS0UsIEFXUyAmIE9wZW5TdGFjaykKICAjIwogICMgc3RvcmFnZUNsYXNzOiAiLSIKCiMgZGVmYXVsdCBzZWN1cml0eSBjb250ZXh0CnNlY3VyaXR5Q29udGV4dDoKICBlbmFibGVkOiBmYWxzZQogIGFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbjogZmFsc2UKICBydW5Bc1VzZXI6IDEwMDAKICBmc0dyb3VwOiAyMDAwCgpleHRyYUNvbmZpZ01hcE1vdW50czogW10KICAjIC0gbmFtZTogbG9ndHJhaWwtY29uZmlncwogICMgICBjb25maWdNYXA6IGtpYmFuYS1sb2d0cmFpbAogICMgICBtb3VudFBhdGg6IC91c3Ivc2hhcmUva2liYW5hL3BsdWdpbnMvbG9ndHJhaWwvbG9ndHJhaWwuanNvbgogICMgICBzdWJQYXRoOiBsb2d0cmFpbC5qc29uCg=="
        }
      ]
    },
    "contentSHA": "4b1971ae0bff2671f371d3c5ffdd0d4c9f2860a943aeed3b79f52dbadaca5f56"
  }
}