{
  "v1": {
    "config": {},
    "helmValues": "rbac:\n  create: true\n  pspEnabled: true\nserviceAccount:\n  create: true\n  name: null\nreplicas: 3\ndeploymentStrategy: RollingUpdate\nreadinessProbe:\n  httpGet:\n    path: /api/health\n    port: 3000\nlivenessProbe:\n  httpGet:\n    path: /api/health\n    port: 3000\n  initialDelaySeconds: 60\n  timeoutSeconds: 30\n  failureThreshold: 10\nimage:\n  repository: grafana/grafana\n  tag: test-tag\n  pullPolicy: Always\nsecurityContext:\n  runAsUser: 472\n  fsGroup: 472\ndownloadDashboardsImage:\n  repository: appropriate/curl\n  tag: latest\n  pullPolicy: IfNotPresent\nservice:\n  type: ClusterIP\n  port: 80\n  annotations: {}\n  labels: {}\ningress:\n  enabled: false\n  annotations: {}\n  labels: {}\n  path: /\n  hosts:\n  - chart-example.local\n  tls: []\nresources: {}\nnodeSelector: {}\ntolerations: []\naffinity: {}\npersistence:\n  enabled: false\nadminUser: admin\nenv: {}\nenvFromSecret: \"\"\nextraSecretMounts: []\nplugins: []\ndatasources: {}\ndashboardProviders: {}\ndashboards: {}\ndashboardsConfigMaps: {}\ngrafana.ini:\n  paths:\n    data: /var/lib/grafana/data\n    logs: /var/log/grafana\n    plugins: /var/lib/grafana/plugins\n    provisioning: /etc/grafana/provisioning\n  analytics:\n    check_for_updates: true\n  log:\n    mode: console\n  grafana_net:\n    url: https://grafana.net\nldap:\n  existingSecret: \"\"\n  config: \"\"\nsmtp:\n  existingSecret: \"\"\nsidecar:\n  image: kiwigrid/k8s-sidecar:0.0.6\n  imagePullPolicy: IfNotPresent\n  resources: null\n  dashboards:\n    enabled: false\n    label: grafana_dashboard\n    folder: /tmp/dashboards\n    searchNamespace: null\n  datasources:\n    enabled: false\n    label: grafana_datasource\n    searchNamespace: null\nadminPassword: strongpassword\n",
    "releaseName": "grafana",
    "helmValuesDefaults": "rbac:\n  create: true\n  pspEnabled: true\nserviceAccount:\n  create: true\n  name:\n\nreplicas: 1\n\ndeploymentStrategy: RollingUpdate\n\nreadinessProbe:\n  httpGet:\n    path: /api/health\n    port: 3000\n\nlivenessProbe:\n  httpGet:\n    path: /api/health\n    port: 3000\n  initialDelaySeconds: 60\n  timeoutSeconds: 30\n  failureThreshold: 10\n\nimage:\n  repository: grafana/grafana\n  tag: 5.3.4\n  pullPolicy: IfNotPresent\n\n  ## Optionally specify an array of imagePullSecrets.\n  ## Secrets must be manually created in the namespace.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ##\n  # pullSecrets:\n  #   - myRegistrKeySecretName\n\nsecurityContext:\n  runAsUser: 472\n  fsGroup: 472\n\n## Assign a PriorityClassName to pods if set\n# priorityClassName:\n\ndownloadDashboardsImage:\n  repository: appropriate/curl\n  tag: latest\n  pullPolicy: IfNotPresent\n\n## Pod Annotations\n# podAnnotations: {}\n\n## Deployment annotations\n# annotations: {}\n\n## Expose the grafana service to be accessed from outside the cluster (LoadBalancer service).\n## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.\n## ref: http://kubernetes.io/docs/user-guide/services/\n##\nservice:\n  type: ClusterIP\n  port: 80\n  annotations: {}\n  labels: {}\n\ningress:\n  enabled: false\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  labels: {}\n  path: /\n  hosts:\n    - chart-example.local\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n#  limits:\n#    cpu: 100m\n#    memory: 128Mi\n#  requests:\n#    cpu: 100m\n#    memory: 128Mi\n\n## Node labels for pod assignment\n## ref: https://kubernetes.io/docs/user-guide/node-selection/\n#\nnodeSelector: {}\n\n## Tolerations for pod assignment\n## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n##\ntolerations: []\n\n## Affinity for pod assignment\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n##\naffinity: {}\n\n## Enable persistence using Persistent Volume Claims\n## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n##\npersistence:\n  enabled: false\n  # storageClassName: default\n  # accessModes:\n  #   - ReadWriteOnce\n  # size: 10Gi\n  # annotations: {}\n  # subPath: \"\"\n  # existingClaim:\n\nadminUser: admin\n# adminPassword: strongpassword\n\n## Use an alternate scheduler, e.g. \"stork\".\n## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n##\n# schedulerName:\n\n## Extra environment variables that will be pass onto deployment pods\nenv: {}\n\n## The name of a secret in the same kubernetes namespace which contain values to be added to the environment\n## This can be useful for auth tokens, etc\nenvFromSecret: \"\"\n\n## Additional grafana server secret mounts\n# Defines additional mounts with secrets. Secrets must be manually created in the namespace.\nextraSecretMounts: []\n  # - name: secret-files\n  #   mountPath: /etc/secrets\n  #   secretName: grafana-secret-files\n  #   readOnly: true\n\n## Pass the plugins you want installed as a list.\n##\nplugins: []\n  # - digrich-bubblechart-panel\n  # - grafana-clock-panel\n\n## Configure grafana datasources\n## ref: http://docs.grafana.org/administration/provisioning/#datasources\n##\ndatasources: {}\n#  datasources.yaml:\n#    apiVersion: 1\n#    datasources:\n#    - name: Prometheus\n#      type: prometheus\n#      url: http://prometheus-prometheus-server\n#      access: proxy\n#      isDefault: true\n\n## Configure grafana dashboard providers\n## ref: http://docs.grafana.org/administration/provisioning/#dashboards\n##\n## `path` must be /var/lib/grafana/dashboards/\u003cprovider_name\u003e\n##\ndashboardProviders: {}\n#  dashboardproviders.yaml:\n#    apiVersion: 1\n#    providers:\n#    - name: 'default'\n#      orgId: 1\n#      folder: ''\n#      type: file\n#      disableDeletion: false\n#      editable: true\n#      options:\n#        path: /var/lib/grafana/dashboards/default\n\n## Configure grafana dashboard to import\n## NOTE: To use dashboards you must also enable/configure dashboardProviders\n## ref: https://grafana.com/dashboards\n##\n## dashboards per provider, use provider name as key.\n##\ndashboards: {}\n#  default:\n#    some-dashboard:\n#      json: |\n#        $RAW_JSON\n#    prometheus-stats:\n#      gnetId: 2\n#      revision: 2\n#      datasource: Prometheus\n#    local-dashboard:\n#      url: https://example.com/repository/test.json\n\n## Reference to external ConfigMap per provider. Use provider name as key and ConfiMap name as value.\n## A provider dashboards must be defined either by external ConfigMaps or in values.yaml, not in both.\n## ConfigMap data example:\n##\n## data:\n##   example-dashboard.json: |\n##     RAW_JSON\n##\ndashboardsConfigMaps: {}\n#  default: \"\"\n\n## Grafana's primary configuration\n## NOTE: values in map will be converted to ini format\n## ref: http://docs.grafana.org/installation/configuration/\n##\ngrafana.ini:\n  paths:\n    data: /var/lib/grafana/data\n    logs: /var/log/grafana\n    plugins: /var/lib/grafana/plugins\n    provisioning: /etc/grafana/provisioning\n  analytics:\n    check_for_updates: true\n  log:\n    mode: console\n  grafana_net:\n    url: https://grafana.net\n## LDAP Authentication can be enabled with the following values on grafana.ini\n## NOTE: Grafana will fail to start if the value for ldap.toml is invalid\n  # auth.ldap:\n  #   enabled: true\n  #   allow_sign_up: true\n  #   config_file: /etc/grafana/ldap.toml\n\n## Grafana's LDAP configuration\n## Templated by the template in _helpers.tpl\n## NOTE: To enable the grafana.ini must be configured with auth.ldap.enabled\n## ref: http://docs.grafana.org/installation/configuration/#auth-ldap\n## ref: http://docs.grafana.org/installation/ldap/#configuration\nldap:\n  # `existingSecret` is a reference to an existing secret containing the ldap configuration\n  # for Grafana in a key `ldap-toml`.\n  existingSecret: \"\"\n  # `config` is the content of `ldap.toml` that will be stored in the created secret\n  config: \"\"\n  # config: |-\n  #   verbose_logging = true\n\n  #   [[servers]]\n  #   host = \"my-ldap-server\"\n  #   port = 636\n  #   use_ssl = true\n  #   start_tls = false\n  #   ssl_skip_verify = false\n  #   bind_dn = \"uid=%s,ou=users,dc=myorg,dc=com\"\n\n## Grafana's SMTP configuration\n## NOTE: To enable, grafana.ini must be configured with smtp.enabled\n## ref: http://docs.grafana.org/installation/configuration/#smtp\nsmtp:\n  # `existingSecret` is a reference to an existing secret containing the smtp configuration\n  # for Grafana in keys `user` and `password`.\n  existingSecret: \"\"\n\n## Sidecars that collect the configmaps with specified label and stores the included files them into the respective folders\n## Requires at least Grafana 5 to work and can't be used together with parameters dashboardProviders, datasources and dashboards\nsidecar:\n  image: kiwigrid/k8s-sidecar:0.0.6\n  imagePullPolicy: IfNotPresent\n  resources:\n#   limits:\n#     cpu: 100m\n#     memory: 100Mi\n#   requests:\n#     cpu: 50m\n#     memory: 50Mi\n  dashboards:\n    enabled: false\n    # label that the configmaps with dashboards are marked with\n    label: grafana_dashboard\n    # folder in the pod that should hold the collected dashboards\n    folder: /tmp/dashboards\n    # If specified, the sidecar will search for dashboard config-maps inside this namespace.\n    # Otherwise the namespace in which the sidecar is running will be used.\n    # It's also possible to specify ALL to search in all namespaces\n    searchNamespace: null\n  datasources:\n    enabled: false\n    # label that the configmaps with datasources are marked with\n    label: grafana_datasource\n    # If specified, the sidecar will search for datasource config-maps inside this namespace.\n    # Otherwise the namespace in which the sidecar is running will be used.\n    # It's also possible to specify ALL to search in all namespaces\n    searchNamespace: null\n",
    "kustomize": {
      "overlays": {
        "ship": {
          "patches": {
            "/podsecuritypolicy.yaml": "apiVersion: extensions/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  annotations:\n    apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default\n    apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default\n    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default\n    seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default\n  labels:\n    app: grafana\n    release: grafana\n  name: grafana\nspec:\n  hostNetwork: true\n",
            "/secret.yaml": "apiVersion: v1\ndata:\n  admin-password: applesandoranges\n  admin-user: notadmin\nkind: Secret\nmetadata:\n  labels:\n    app: grafana\n    release: grafana\n  name: grafana\n",
            "/service.yaml": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: grafana\n    release: grafana\n  name: grafana\nspec:\n  $setElementOrder/ports:\n  - port: 80\n  ports:\n  - port: 80\n    targetPort: 4444\n"
          }
        }
      }
    },
    "upstream": "https://github.com/helm/charts/tree/353ba5ef6467fd64035b7d5446df426f86d60153/stable/grafana",
    "metadata": {
      "applicationType": "helm",
      "sequence": 0,
      "icon": "https://raw.githubusercontent.com/grafana/grafana/master/public/img/logo_transparent_400x.png",
      "name": "grafana",
      "releaseNotes": "[stable/grafana] Add variable to optionally set priorityClassName (#9427)\n\n* Add variable to optionally set priorityClassName\n\nSigned-off-by: Chris O'Brien \u003cchrisob91@gmail.com\u003e\n\n* Bump minor version instead of patch version\n\nSigned-off-by: Chris O'Brien \u003cchrisob91@gmail.com\u003e",
      "version": "1.19.0",
      "license": {
        "id": "",
        "assignee": "",
        "createdAt": "0001-01-01T00:00:00Z",
        "expiresAt": "0001-01-01T00:00:00Z",
        "type": ""
      }
    },
    "upstreamContents": {
      "upstreamFiles": [
        {
          "filePath": "Chart.yaml",
          "fileContents": "bmFtZTogZ3JhZmFuYQp2ZXJzaW9uOiAxLjE5LjAKYXBwVmVyc2lvbjogNS4zLjQKa3ViZVZlcnNpb246ICJeMS44LjAtMCIKZGVzY3JpcHRpb246IFRoZSBsZWFkaW5nIHRvb2wgZm9yIHF1ZXJ5aW5nIGFuZCB2aXN1YWxpemluZyB0aW1lIHNlcmllcyBhbmQgbWV0cmljcy4KaG9tZTogaHR0cHM6Ly9ncmFmYW5hLm5ldAppY29uOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZ3JhZmFuYS9ncmFmYW5hL21hc3Rlci9wdWJsaWMvaW1nL2xvZ29fdHJhbnNwYXJlbnRfNDAweC5wbmcKc291cmNlczoKICAtIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFmYW5hL2dyYWZhbmEKbWFpbnRhaW5lcnM6CiAgLSBuYW1lOiB6YW5oc2llaAogICAgZW1haWw6IHphbmhzaWVoQGdtYWlsLmNvbQogIC0gbmFtZTogcnRsdWNraWUKICAgIGVtYWlsOiBybHVja2llQGNpc2NvLmNvbQplbmdpbmU6IGdvdHBsCg=="
        },
        {
          "filePath": "README.md",
          "fileContents": ""
        },
        {
          "filePath": "templates/NOTES.txt",
          "fileContents": "MS4gR2V0IHlvdXIgJ3t7IC5WYWx1ZXMuYWRtaW5Vc2VyIH19JyB1c2VyIHBhc3N3b3JkIGJ5IHJ1bm5pbmc6CgogICBrdWJlY3RsIGdldCBzZWNyZXQgLS1uYW1lc3BhY2Uge3sgLlJlbGVhc2UuTmFtZXNwYWNlIH19IHt7IHRlbXBsYXRlICJncmFmYW5hLmZ1bGxuYW1lIiAuIH19IC1vIGpzb25wYXRoPSJ7LmRhdGEuYWRtaW4tcGFzc3dvcmR9IiB8IGJhc2U2NCAtLWRlY29kZSA7IGVjaG8KCjIuIFRoZSBHcmFmYW5hIHNlcnZlciBjYW4gYmUgYWNjZXNzZWQgdmlhIHBvcnQge3sgLlZhbHVlcy5zZXJ2aWNlLnBvcnQgfX0gb24gdGhlIGZvbGxvd2luZyBETlMgbmFtZSBmcm9tIHdpdGhpbiB5b3VyIGNsdXN0ZXI6CgogICB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5mdWxsbmFtZSIgLiB9fS57eyAuUmVsZWFzZS5OYW1lc3BhY2UgfX0uc3ZjLmNsdXN0ZXIubG9jYWwKe3sgaWYgLlZhbHVlcy5pbmdyZXNzLmVuYWJsZWQgfX0KICAgRnJvbSBvdXRzaWRlIHRoZSBjbHVzdGVyLCB0aGUgc2VydmVyIFVSTChzKSBhcmU6Cnt7LSByYW5nZSAuVmFsdWVzLmluZ3Jlc3MuaG9zdHMgfX0KICAgICBodHRwOi8ve3sgLiB9fQp7ey0gZW5kIH19Cnt7IGVsc2UgfX0KICAgR2V0IHRoZSBHcmFmYW5hIFVSTCB0byB2aXNpdCBieSBydW5uaW5nIHRoZXNlIGNvbW1hbmRzIGluIHRoZSBzYW1lIHNoZWxsOgp7eyBpZiBjb250YWlucyAiTm9kZVBvcnQiIC5WYWx1ZXMuc2VydmljZS50eXBlIC19fQogICAgIGV4cG9ydCBOT0RFX1BPUlQ9JChrdWJlY3RsIGdldCAtLW5hbWVzcGFjZSB7eyAuUmVsZWFzZS5OYW1lc3BhY2UgfX0gLW8ganNvbnBhdGg9Insuc3BlYy5wb3J0c1swXS5ub2RlUG9ydH0iIHNlcnZpY2VzIHt7IHRlbXBsYXRlICJncmFmYW5hLmZ1bGxuYW1lIiAuIH19KQogICAgIGV4cG9ydCBOT0RFX0lQPSQoa3ViZWN0bCBnZXQgbm9kZXMgLS1uYW1lc3BhY2Uge3sgLlJlbGVhc2UuTmFtZXNwYWNlIH19IC1vIGpzb25wYXRoPSJ7Lml0ZW1zWzBdLnN0YXR1cy5hZGRyZXNzZXNbMF0uYWRkcmVzc30iKQogICAgIGVjaG8gaHR0cDovLyROT0RFX0lQOiROT0RFX1BPUlQKe3sgZWxzZSBpZiBjb250YWlucyAiTG9hZEJhbGFuY2VyIiAuVmFsdWVzLnNlcnZpY2UudHlwZSAtfX0KICAgTk9URTogSXQgbWF5IHRha2UgYSBmZXcgbWludXRlcyBmb3IgdGhlIExvYWRCYWxhbmNlciBJUCB0byBiZSBhdmFpbGFibGUuCiAgICAgICAgWW91IGNhbiB3YXRjaCB0aGUgc3RhdHVzIG9mIGJ5IHJ1bm5pbmcgJ2t1YmVjdGwgZ2V0IHN2YyAtLW5hbWVzcGFjZSB7eyAuUmVsZWFzZS5OYW1lc3BhY2UgfX0gLXcge3sgdGVtcGxhdGUgImdyYWZhbmEuZnVsbG5hbWUiIC4gfX0nCiAgICAgZXhwb3J0IFNFUlZJQ0VfSVA9JChrdWJlY3RsIGdldCBzdmMgLS1uYW1lc3BhY2Uge3sgLlJlbGVhc2UuTmFtZXNwYWNlIH19IHt7IHRlbXBsYXRlICJncmFmYW5hLmZ1bGxuYW1lIiAuIH19IC1vIGpzb25wYXRoPSd7LnN0YXR1cy5sb2FkQmFsYW5jZXIuaW5ncmVzc1swXS5pcH0nKQogICAgIGh0dHA6Ly8kU0VSVklDRV9JUDp7eyAuVmFsdWVzLnNlcnZpY2UucG9ydCAtfX0Ke3sgZWxzZSBpZiBjb250YWlucyAiQ2x1c3RlcklQIiAgLlZhbHVlcy5zZXJ2aWNlLnR5cGUgfX0KICAgICBleHBvcnQgUE9EX05BTUU9JChrdWJlY3RsIGdldCBwb2RzIC0tbmFtZXNwYWNlIHt7IC5SZWxlYXNlLk5hbWVzcGFjZSB9fSAtbCAiYXBwPXt7IHRlbXBsYXRlICJncmFmYW5hLmZ1bGxuYW1lIiAuIH19LGNvbXBvbmVudD17eyAuVmFsdWVzLm5hbWUgfX0iIC1vIGpzb25wYXRoPSJ7Lml0ZW1zWzBdLm1ldGFkYXRhLm5hbWV9IikKICAgICBrdWJlY3RsIC0tbmFtZXNwYWNlIHt7IC5SZWxlYXNlLk5hbWVzcGFjZSB9fSBwb3J0LWZvcndhcmQgJFBPRF9OQU1FIDMwMDAKe3stIGVuZCB9fQp7ey0gZW5kIH19CgozLiBMb2dpbiB3aXRoIHRoZSBwYXNzd29yZCBmcm9tIHN0ZXAgMSBhbmQgdGhlIHVzZXJuYW1lOiB7eyAuVmFsdWVzLmFkbWluVXNlciB9fQoKe3stIGlmIG5vdCAuVmFsdWVzLnBlcnNpc3RlbmNlLmVuYWJsZWQgfX0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIyMjIyAgIFdBUk5JTkc6IFBlcnNpc3RlbmNlIGlzIGRpc2FibGVkISEhIFlvdSB3aWxsIGxvc2UgeW91ciBkYXRhIHdoZW4gICAjIyMjIwojIyMjIyMgICAgICAgICAgICB0aGUgR3JhZmFuYSBwb2QgaXMgdGVybWluYXRlZC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIyMjIyMKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCnt7LSBlbmQgfX0K"
        },
        {
          "filePath": "templates/_helpers.tpl",
          "fileContents": "e3svKiB2aW06IHNldCBmaWxldHlwZT1tdXN0YWNoZTogKi99fQp7ey8qCkV4cGFuZCB0aGUgbmFtZSBvZiB0aGUgY2hhcnQuCiovfX0Ke3stIGRlZmluZSAiZ3JhZmFuYS5uYW1lIiAtfX0Ke3stIGRlZmF1bHQgLkNoYXJ0Lk5hbWUgLlZhbHVlcy5uYW1lT3ZlcnJpZGUgfCB0cnVuYyA2MyB8IHRyaW1TdWZmaXggIi0iIC19fQp7ey0gZW5kIC19fQoKe3svKgpDcmVhdGUgYSBkZWZhdWx0IGZ1bGx5IHF1YWxpZmllZCBhcHAgbmFtZS4KV2UgdHJ1bmNhdGUgYXQgNjMgY2hhcnMgYmVjYXVzZSBzb21lIEt1YmVybmV0ZXMgbmFtZSBmaWVsZHMgYXJlIGxpbWl0ZWQgdG8gdGhpcyAoYnkgdGhlIEROUyBuYW1pbmcgc3BlYykuCklmIHJlbGVhc2UgbmFtZSBjb250YWlucyBjaGFydCBuYW1lIGl0IHdpbGwgYmUgdXNlZCBhcyBhIGZ1bGwgbmFtZS4KKi99fQp7ey0gZGVmaW5lICJncmFmYW5hLmZ1bGxuYW1lIiAtfX0Ke3stIGlmIC5WYWx1ZXMuZnVsbG5hbWVPdmVycmlkZSAtfX0Ke3stIC5WYWx1ZXMuZnVsbG5hbWVPdmVycmlkZSB8IHRydW5jIDYzIHwgdHJpbVN1ZmZpeCAiLSIgLX19Cnt7LSBlbHNlIC19fQp7ey0gJG5hbWUgOj0gZGVmYXVsdCAuQ2hhcnQuTmFtZSAuVmFsdWVzLm5hbWVPdmVycmlkZSAtfX0Ke3stIGlmIGNvbnRhaW5zICRuYW1lIC5SZWxlYXNlLk5hbWUgLX19Cnt7LSAuUmVsZWFzZS5OYW1lIHwgdHJ1bmMgNjMgfCB0cmltU3VmZml4ICItIiAtfX0Ke3stIGVsc2UgLX19Cnt7LSBwcmludGYgIiVzLSVzIiAuUmVsZWFzZS5OYW1lICRuYW1lIHwgdHJ1bmMgNjMgfCB0cmltU3VmZml4ICItIiAtfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0KCnt7LyoKQ3JlYXRlIGNoYXJ0IG5hbWUgYW5kIHZlcnNpb24gYXMgdXNlZCBieSB0aGUgY2hhcnQgbGFiZWwuCiovfX0Ke3stIGRlZmluZSAiZ3JhZmFuYS5jaGFydCIgLX19Cnt7LSBwcmludGYgIiVzLSVzIiAuQ2hhcnQuTmFtZSAuQ2hhcnQuVmVyc2lvbiB8IHJlcGxhY2UgIisiICJfIiB8IHRydW5jIDYzIHwgdHJpbVN1ZmZpeCAiLSIgLX19Cnt7LSBlbmQgLX19Cgp7ey8qCkNyZWF0ZSB0aGUgbmFtZSBvZiB0aGUgc2VydmljZSBhY2NvdW50CiovfX0Ke3stIGRlZmluZSAiZ3JhZmFuYS5zZXJ2aWNlQWNjb3VudE5hbWUiIC19fQp7ey0gaWYgLlZhbHVlcy5zZXJ2aWNlQWNjb3VudC5jcmVhdGUgLX19CiAgICB7eyBkZWZhdWx0IChpbmNsdWRlICJncmFmYW5hLmZ1bGxuYW1lIiAuKSAuVmFsdWVzLnNlcnZpY2VBY2NvdW50Lm5hbWUgfX0Ke3stIGVsc2UgLX19CiAgICB7eyBkZWZhdWx0ICJkZWZhdWx0IiAuVmFsdWVzLnNlcnZpY2VBY2NvdW50Lm5hbWUgfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0K"
        },
        {
          "filePath": "templates/clusterrole.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMucmJhYy5jcmVhdGUgfX0Ka2luZDogQ2x1c3RlclJvbGUKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQptZXRhZGF0YToKICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJncmFmYW5hLm5hbWUiIC4gfX0KICAgIGNoYXJ0OiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5jaGFydCIgLiB9fQogICAgcmVsZWFzZToge3sgLlJlbGVhc2UuTmFtZSB9fQogICAgaGVyaXRhZ2U6IHt7IC5SZWxlYXNlLlNlcnZpY2UgfX0Ke3stIHdpdGggLlZhbHVlcy5hbm5vdGF0aW9ucyB9fQogIGFubm90YXRpb25zOgp7eyB0b1lhbWwgLiB8IGluZGVudCA0IH19Cnt7LSBlbmQgfX0KICBuYW1lOiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5mdWxsbmFtZSIgLiB9fS1jbHVzdGVycm9sZQp7ey0gaWYgb3IgLlZhbHVlcy5zaWRlY2FyLmRhc2hib2FyZHMuZW5hYmxlZCAuVmFsdWVzLnNpZGVjYXIuZGF0YXNvdXJjZXMuZW5hYmxlZCB9fQpydWxlczoKLSBhcGlHcm91cHM6IFsiIl0gIyAiIiBpbmRpY2F0ZXMgdGhlIGNvcmUgQVBJIGdyb3VwCiAgcmVzb3VyY2VzOiBbImNvbmZpZ21hcHMiXQogIHZlcmJzOiBbImdldCIsICJ3YXRjaCIsICJsaXN0Il0Ke3stIGVsc2UgfX0KcnVsZXM6IFtdCnt7LSBlbmR9fQp7ey0gZW5kfX0K"
        },
        {
          "filePath": "templates/clusterrolebinding.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMucmJhYy5jcmVhdGUgfX0Ka2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKbWV0YWRhdGE6CiAgbmFtZToge3sgdGVtcGxhdGUgImdyYWZhbmEuZnVsbG5hbWUiIC4gfX0tY2x1c3RlcnJvbGViaW5kaW5nCiAgbGFiZWxzOgogICAgYXBwOiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5uYW1lIiAuIH19CiAgICBjaGFydDoge3sgdGVtcGxhdGUgImdyYWZhbmEuY2hhcnQiIC4gfX0KICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0KICAgIGhlcml0YWdlOiB7eyAuUmVsZWFzZS5TZXJ2aWNlIH19Cnt7LSB3aXRoIC5WYWx1ZXMuYW5ub3RhdGlvbnMgfX0KICBhbm5vdGF0aW9uczoKe3sgdG9ZYW1sIC4gfCBpbmRlbnQgNCB9fQp7ey0gZW5kIH19CnN1YmplY3RzOgogIC0ga2luZDogU2VydmljZUFjY291bnQKICAgIG5hbWU6IHt7IHRlbXBsYXRlICJncmFmYW5hLnNlcnZpY2VBY2NvdW50TmFtZSIgLiB9fQogICAgbmFtZXNwYWNlOiB7eyAuUmVsZWFzZS5OYW1lc3BhY2UgfX0Kcm9sZVJlZjoKICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHt7IHRlbXBsYXRlICJncmFmYW5hLmZ1bGxuYW1lIiAuIH19LWNsdXN0ZXJyb2xlCiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8Ke3stIGVuZH19Cg=="
        },
        {
          "filePath": "templates/configmap-dashboard-provider.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMuc2lkZWNhci5kYXNoYm9hcmRzLmVuYWJsZWQgfX0KYXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIGxhYmVsczoKICAgIGFwcDoge3sgdGVtcGxhdGUgImdyYWZhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6IHt7IHRlbXBsYXRlICJncmFmYW5hLmNoYXJ0IiAuIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQp7ey0gd2l0aCAuVmFsdWVzLmFubm90YXRpb25zIH19CiAgYW5ub3RhdGlvbnM6Cnt7IHRvWWFtbCAuIHwgaW5kZW50IDQgfX0Ke3stIGVuZCB9fQogIG5hbWU6IHt7IHRlbXBsYXRlICJncmFmYW5hLmZ1bGxuYW1lIiAuIH19LWNvbmZpZy1kYXNoYm9hcmRzCmRhdGE6CiAgcHJvdmlkZXIueWFtbDogfC0KICAgIGFwaVZlcnNpb246IDEKICAgIHByb3ZpZGVyczoKICAgIC0gbmFtZTogJ2RlZmF1bHQnCiAgICAgIG9yZ0lkOiAxCiAgICAgIGZvbGRlcjogJycKICAgICAgdHlwZTogZmlsZQogICAgICBkaXNhYmxlRGVsZXRpb246IGZhbHNlCiAgICAgIG9wdGlvbnM6CiAgICAgICAgcGF0aDoge3sgLlZhbHVlcy5zaWRlY2FyLmRhc2hib2FyZHMuZm9sZGVyIH19Cnt7LSBlbmR9fQo="
        },
        {
          "filePath": "templates/configmap.yaml",
          "fileContents": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHt7IHRlbXBsYXRlICJncmFmYW5hLmZ1bGxuYW1lIiAuIH19CiAgbGFiZWxzOgogICAgYXBwOiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5uYW1lIiAuIH19CiAgICBjaGFydDoge3sgdGVtcGxhdGUgImdyYWZhbmEuY2hhcnQiIC4gfX0KICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0KICAgIGhlcml0YWdlOiB7eyAuUmVsZWFzZS5TZXJ2aWNlIH19CmRhdGE6Cnt7LSBpZiAuVmFsdWVzLnBsdWdpbnMgfX0KICBwbHVnaW5zOiB7eyBqb2luICIsIiAuVmFsdWVzLnBsdWdpbnMgfX0Ke3stIGVuZCB9fQogIGdyYWZhbmEuaW5pOiB8Cnt7LSByYW5nZSAka2V5LCAkdmFsdWUgOj0gaW5kZXggLlZhbHVlcyAiZ3JhZmFuYS5pbmkiIH19CiAgICBbe3sgJGtleSB9fV0KICAgIHt7LSByYW5nZSAkZWxlbSwgJGVsZW1WYWwgOj0gJHZhbHVlIH19CiAgICB7eyAkZWxlbSB9fSA9IHt7ICRlbGVtVmFsIH19CiAgICB7ey0gZW5kIH19Cnt7LSBlbmQgfX0KCnt7LSBpZiAuVmFsdWVzLmRhdGFzb3VyY2VzIH19CiAge3stIHJhbmdlICRrZXksICR2YWx1ZSA6PSAuVmFsdWVzLmRhdGFzb3VyY2VzIH19CiAge3sgJGtleSB9fTogfAp7eyB0b1lhbWwgJHZhbHVlIHwgaW5kZW50IDQgfX0KICB7ey0gZW5kIC19fQp7ey0gZW5kIC19fQoKe3stIGlmIC5WYWx1ZXMuZGFzaGJvYXJkUHJvdmlkZXJzIH19CiAge3stIHJhbmdlICRrZXksICR2YWx1ZSA6PSAuVmFsdWVzLmRhc2hib2FyZFByb3ZpZGVycyB9fQogIHt7ICRrZXkgfX06IHwKe3sgdG9ZYW1sICR2YWx1ZSB8IGluZGVudCA0IH19CiAge3stIGVuZCAtfX0Ke3stIGVuZCAtfX0KCnt7LSBpZiAuVmFsdWVzLmRhc2hib2FyZHMgIH19CiAgZG93bmxvYWRfZGFzaGJvYXJkcy5zaDogfAogICAgIyEvdXNyL2Jpbi9lbnYgc2gKICAgIHNldCAtZXVmCiAgICB7ey0gaWYgLlZhbHVlcy5kYXNoYm9hcmRQcm92aWRlcnMgfX0KICAgICAge3stIHJhbmdlICRrZXksICR2YWx1ZSA6PSAuVmFsdWVzLmRhc2hib2FyZFByb3ZpZGVycyB9fQogICAgICAgIHt7LSByYW5nZSAkdmFsdWUucHJvdmlkZXJzIH19CiAgICBta2RpciAtcCB7eyAub3B0aW9ucy5wYXRoIH19CiAgICAgICAge3stIGVuZCB9fQogICAgICB7ey0gZW5kIH19CiAgICB7ey0gZW5kIH19CgogIHt7LSByYW5nZSAkcHJvdmlkZXIsICRkYXNoYm9hcmRzIDo9IC5WYWx1ZXMuZGFzaGJvYXJkcyB9fQogICAge3stIHJhbmdlICRrZXksICR2YWx1ZSA6PSAkZGFzaGJvYXJkcyB9fQogICAgICB7ey0gaWYgKG9yIChoYXNLZXkgJHZhbHVlICJnbmV0SWQiKSAoaGFzS2V5ICR2YWx1ZSAidXJsIikpIH19CiAgICBjdXJsIC1zayBcCiAgICAtLWNvbm5lY3QtdGltZW91dCA2MCBcCiAgICAtLW1heC10aW1lIDYwIFwKICAgIC1IICJBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24iIFwKICAgIC1IICJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOCIgXAogICAge3stIGlmICR2YWx1ZS51cmwgLX19e3sgJHZhbHVlLnVybCB9fXt7LSBlbHNlIC19fSBodHRwczovL2dyYWZhbmEuY29tL2FwaS9kYXNoYm9hcmRzL3t7ICR2YWx1ZS5nbmV0SWQgfX0vcmV2aXNpb25zL3t7LSBpZiAkdmFsdWUucmV2aXNpb24gLX19e3sgJHZhbHVlLnJldmlzaW9uIH19e3stIGVsc2UgLX19MXt7LSBlbmQgLX19L2Rvd25sb2Fke3stIGVuZCAtfX17eyBpZiAkdmFsdWUuZGF0YXNvdXJjZSB9fXwgc2VkICdzfFwiZGF0YXNvdXJjZVwiOlteLF0qfFwiZGF0YXNvdXJjZVwiOiBcInt7ICR2YWx1ZS5kYXRhc291cmNlIH19XCJ8Zyd7eyBlbmQgfX0gXAogICAgPiAvdmFyL2xpYi9ncmFmYW5hL2Rhc2hib2FyZHMve3sgJHByb3ZpZGVyIH19L3t7ICRrZXkgfX0uanNvbgogICAgICB7ey0gZW5kIH19CiAgICB7ey0gZW5kIH19CiAge3stIGVuZCB9fQp7ey0gZW5kIH19Cg=="
        },
        {
          "filePath": "templates/dashboards-json-configmap.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMuZGFzaGJvYXJkcyB9fQogIHt7LSByYW5nZSAkcHJvdmlkZXIsICRkYXNoYm9hcmRzIDo9IC5WYWx1ZXMuZGFzaGJvYXJkcyB9fQotLS0KYXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHt7IHRlbXBsYXRlICJncmFmYW5hLmZ1bGxuYW1lIiAkIH19LWRhc2hib2FyZHMte3sgJHByb3ZpZGVyIH19CiAgbGFiZWxzOgogICAgYXBwOiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5uYW1lIiAkIH19CiAgICBjaGFydDoge3sgdGVtcGxhdGUgImdyYWZhbmEuY2hhcnQiICQgfX0KICAgIHJlbGVhc2U6IHt7ICQuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgJC5SZWxlYXNlLlNlcnZpY2UgfX0KICAgIGRhc2hib2FyZC1wcm92aWRlcjoge3sgJHByb3ZpZGVyIH19CmRhdGE6CiAge3stIHJhbmdlICRrZXksICR2YWx1ZSA6PSAkZGFzaGJvYXJkcyB9fQogICAge3stIGlmIGhhc0tleSAkdmFsdWUgImpzb24iIH19CiAge3sgJGtleSB9fS5qc29uOiB8Cnt7ICR2YWx1ZS5qc29uIHwgaW5kZW50IDQgfX0KICAgIHt7LSBlbmQgfX0KICB7ey0gZW5kIH19CiAge3stIGVuZCB9fQp7ey0gZW5kIH19Cg=="
        },
        {
          "filePath": "templates/deployment.yaml",
          "fileContents": ""
        },
        {
          "filePath": "templates/ingress.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMuaW5ncmVzcy5lbmFibGVkIC19fQp7ey0gJGZ1bGxOYW1lIDo9IGluY2x1ZGUgImdyYWZhbmEuZnVsbG5hbWUiIC4gLX19Cnt7LSAkc2VydmljZVBvcnQgOj0gLlZhbHVlcy5zZXJ2aWNlLnBvcnQgLX19Cnt7LSAkaW5ncmVzc1BhdGggOj0gLlZhbHVlcy5pbmdyZXNzLnBhdGggLX19CmFwaVZlcnNpb246IGV4dGVuc2lvbnMvdjFiZXRhMQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIG5hbWU6IHt7ICRmdWxsTmFtZSB9fQogIGxhYmVsczoKICAgIGFwcDoge3sgdGVtcGxhdGUgImdyYWZhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6IHt7IHRlbXBsYXRlICJncmFmYW5hLmNoYXJ0IiAuIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQp7ey0gaWYgLlZhbHVlcy5pbmdyZXNzLmxhYmVscyB9fQp7eyB0b1lhbWwgLlZhbHVlcy5pbmdyZXNzLmxhYmVscyB8IGluZGVudCA0IH19Cnt7LSBlbmQgfX0Ke3stIHdpdGggLlZhbHVlcy5pbmdyZXNzLmFubm90YXRpb25zIH19CiAgYW5ub3RhdGlvbnM6Cnt7IHRvWWFtbCAuIHwgaW5kZW50IDQgfX0Ke3stIGVuZCB9fQpzcGVjOgp7ey0gaWYgLlZhbHVlcy5pbmdyZXNzLnRscyB9fQogIHRsczoKICB7ey0gcmFuZ2UgLlZhbHVlcy5pbmdyZXNzLnRscyB9fQogICAgLSBob3N0czoKICAgICAge3stIHJhbmdlIC5ob3N0cyB9fQogICAgICAgIC0ge3sgLiB8IHF1b3RlIH19CiAgICAgIHt7LSBlbmQgfX0KICAgICAgc2VjcmV0TmFtZToge3sgLnNlY3JldE5hbWUgfX0KICB7ey0gZW5kIH19Cnt7LSBlbmQgfX0KICBydWxlczoKICB7ey0gcmFuZ2UgLlZhbHVlcy5pbmdyZXNzLmhvc3RzIH19CiAgICAtIGhvc3Q6IHt7IC4gfX0KICAgICAgaHR0cDoKICAgICAgICBwYXRoczoKICAgICAgICAgIC0gcGF0aDoge3sgJGluZ3Jlc3NQYXRoIH19CiAgICAgICAgICAgIGJhY2tlbmQ6CiAgICAgICAgICAgICAgc2VydmljZU5hbWU6IHt7ICRmdWxsTmFtZSB9fQogICAgICAgICAgICAgIHNlcnZpY2VQb3J0OiB7eyAkc2VydmljZVBvcnQgfX0KICB7ey0gZW5kIH19Cnt7LSBlbmQgfX0K"
        },
        {
          "filePath": "templates/podsecuritypolicy.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMucmJhYy5wc3BFbmFibGVkIH19CmFwaVZlcnNpb246IGV4dGVuc2lvbnMvdjFiZXRhMQpraW5kOiBQb2RTZWN1cml0eVBvbGljeQptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5mdWxsbmFtZSIgLiB9fQogIGxhYmVsczoKICAgIGFwcDoge3sgdGVtcGxhdGUgImdyYWZhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6IHt7IC5DaGFydC5OYW1lIH19LXt7IC5DaGFydC5WZXJzaW9uIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQogICAgcmVsZWFzZToge3sgLlJlbGVhc2UuTmFtZSB9fQogIGFubm90YXRpb25zOgogICAgc2VjY29tcC5zZWN1cml0eS5hbHBoYS5rdWJlcm5ldGVzLmlvL2FsbG93ZWRQcm9maWxlTmFtZXM6ICdkb2NrZXIvZGVmYXVsdCcKICAgIGFwcGFybW9yLnNlY3VyaXR5LmJldGEua3ViZXJuZXRlcy5pby9hbGxvd2VkUHJvZmlsZU5hbWVzOiAncnVudGltZS9kZWZhdWx0JwogICAgc2VjY29tcC5zZWN1cml0eS5hbHBoYS5rdWJlcm5ldGVzLmlvL2RlZmF1bHRQcm9maWxlTmFtZTogICdkb2NrZXIvZGVmYXVsdCcKICAgIGFwcGFybW9yLnNlY3VyaXR5LmJldGEua3ViZXJuZXRlcy5pby9kZWZhdWx0UHJvZmlsZU5hbWU6ICAncnVudGltZS9kZWZhdWx0JwpzcGVjOgogIHByaXZpbGVnZWQ6IGZhbHNlCiAgYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uOiBmYWxzZQogIHJlcXVpcmVkRHJvcENhcGFiaWxpdGllczoKICAgIC0gQUxMCiAgdm9sdW1lczoKICAgIC0gJ2NvbmZpZ01hcCcKICAgIC0gJ2VtcHR5RGlyJwogICAgLSAncHJvamVjdGVkJwogICAgLSAnc2VjcmV0JwogICAgLSAnZG93bndhcmRBUEknCiAgICAtICdwZXJzaXN0ZW50Vm9sdW1lQ2xhaW0nCiAgaG9zdE5ldHdvcms6IGZhbHNlCiAgaG9zdElQQzogZmFsc2UKICBob3N0UElEOiBmYWxzZQogIHJ1bkFzVXNlcjoKICAgIHJ1bGU6ICdSdW5Bc0FueScKICBzZUxpbnV4OgogICAgcnVsZTogJ1J1bkFzQW55JwogIHN1cHBsZW1lbnRhbEdyb3VwczoKICAgIHJ1bGU6ICdSdW5Bc0FueScKICBmc0dyb3VwOgogICAgcnVsZTogJ1J1bkFzQW55JwogIHJlYWRPbmx5Um9vdEZpbGVzeXN0ZW06IGZhbHNlCnt7LSBlbmQgfX0K"
        },
        {
          "filePath": "templates/pvc.yaml",
          "fileContents": "e3stIGlmIGFuZCAuVmFsdWVzLnBlcnNpc3RlbmNlLmVuYWJsZWQgKG5vdCAuVmFsdWVzLnBlcnNpc3RlbmNlLmV4aXN0aW5nQ2xhaW0pIH19CmFwaVZlcnNpb246IHYxCmtpbmQ6IFBlcnNpc3RlbnRWb2x1bWVDbGFpbQptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5mdWxsbmFtZSIgLiB9fQogIGxhYmVsczoKICAgIGFwcDoge3sgdGVtcGxhdGUgImdyYWZhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6IHt7IHRlbXBsYXRlICJncmFmYW5hLmNoYXJ0IiAuIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQogIHt7LSB3aXRoIC5WYWx1ZXMucGVyc2lzdGVuY2UuYW5ub3RhdGlvbnMgIH19CiAgYW5ub3RhdGlvbnM6Cnt7IHRvWWFtbCAuIHwgaW5kZW50IDQgfX0KICB7ey0gZW5kIH19CnNwZWM6CiAgYWNjZXNzTW9kZXM6CiAgICB7ey0gcmFuZ2UgLlZhbHVlcy5wZXJzaXN0ZW5jZS5hY2Nlc3NNb2RlcyB9fQogICAgLSB7eyAuIHwgcXVvdGUgfX0KICAgIHt7LSBlbmQgfX0KICByZXNvdXJjZXM6CiAgICByZXF1ZXN0czoKICAgICAgc3RvcmFnZToge3sgLlZhbHVlcy5wZXJzaXN0ZW5jZS5zaXplIHwgcXVvdGUgfX0KICBzdG9yYWdlQ2xhc3NOYW1lOiB7eyAuVmFsdWVzLnBlcnNpc3RlbmNlLnN0b3JhZ2VDbGFzc05hbWUgfX0Ke3stIGVuZCAtfX0K"
        },
        {
          "filePath": "templates/role.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMucmJhYy5jcmVhdGUgfX0KYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MWJldGExCmtpbmQ6IFJvbGUKbWV0YWRhdGE6CiAgbmFtZToge3sgdGVtcGxhdGUgImdyYWZhbmEuZnVsbG5hbWUiIC4gfX0KICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJncmFmYW5hLm5hbWUiIC4gfX0KICAgIGNoYXJ0OiB7eyAuQ2hhcnQuTmFtZSB9fS17eyAuQ2hhcnQuVmVyc2lvbiB9fQogICAgaGVyaXRhZ2U6IHt7IC5SZWxlYXNlLlNlcnZpY2UgfX0KICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0Ke3stIGlmIC5WYWx1ZXMucmJhYy5wc3BFbmFibGVkIH19CnJ1bGVzOgotIGFwaUdyb3VwczogICAgICBbJ2V4dGVuc2lvbnMnXQogIHJlc291cmNlczogICAgICBbJ3BvZHNlY3VyaXR5cG9saWNpZXMnXQogIHZlcmJzOiAgICAgICAgICBbJ3VzZSddCiAgcmVzb3VyY2VOYW1lczogIFt7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5mdWxsbmFtZSIgLiB9fV0Ke3stIGVuZCB9fQp7ey0gZW5kIH19Cg=="
        },
        {
          "filePath": "templates/rolebinding.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMucmJhYy5jcmVhdGUgLX19CmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjFiZXRhMQpraW5kOiBSb2xlQmluZGluZwptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5mdWxsbmFtZSIgLiB9fQogIGxhYmVsczoKICAgIGFwcDoge3sgdGVtcGxhdGUgImdyYWZhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6IHt7IC5DaGFydC5OYW1lIH19LXt7IC5DaGFydC5WZXJzaW9uIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQogICAgcmVsZWFzZToge3sgLlJlbGVhc2UuTmFtZSB9fQpyb2xlUmVmOgogIGFwaUdyb3VwOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvCiAga2luZDogUm9sZQogIG5hbWU6IHt7IHRlbXBsYXRlICJncmFmYW5hLmZ1bGxuYW1lIiAuIH19CnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToge3sgdGVtcGxhdGUgImdyYWZhbmEuc2VydmljZUFjY291bnROYW1lIiAuIH19Cnt7LSBlbmQgLX19Cg=="
        },
        {
          "filePath": "templates/secret.yaml",
          "fileContents": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IHt7IHRlbXBsYXRlICJncmFmYW5hLmZ1bGxuYW1lIiAuIH19CiAgbGFiZWxzOgogICAgYXBwOiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5uYW1lIiAuIH19CiAgICBjaGFydDoge3sgdGVtcGxhdGUgImdyYWZhbmEuY2hhcnQiIC4gfX0KICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0KICAgIGhlcml0YWdlOiB7eyAuUmVsZWFzZS5TZXJ2aWNlIH19CnR5cGU6IE9wYXF1ZQpkYXRhOgogIGFkbWluLXVzZXI6IHt7IC5WYWx1ZXMuYWRtaW5Vc2VyIHwgYjY0ZW5jIHwgcXVvdGUgfX0KICB7ey0gaWYgLlZhbHVlcy5hZG1pblBhc3N3b3JkIH19CiAgYWRtaW4tcGFzc3dvcmQ6IHt7IC5WYWx1ZXMuYWRtaW5QYXNzd29yZCB8IGI2NGVuYyB8IHF1b3RlIH19CiAge3stIGVsc2UgfX0KICBhZG1pbi1wYXNzd29yZDoge3sgcmFuZEFscGhhTnVtIDQwIHwgYjY0ZW5jIHwgcXVvdGUgfX0KICB7ey0gZW5kIH19CiAge3stIGlmIG5vdCAuVmFsdWVzLmxkYXAuZXhpc3RpbmdTZWNyZXQgfX0KICBsZGFwLXRvbWw6IHt7IC5WYWx1ZXMubGRhcC5jb25maWcgfCBiNjRlbmMgfCBxdW90ZSB9fQogIHt7LSBlbmQgfX0K"
        },
        {
          "filePath": "templates/service.yaml",
          "fileContents": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5mdWxsbmFtZSIgLiB9fQogIGxhYmVsczoKICAgIGFwcDoge3sgdGVtcGxhdGUgImdyYWZhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6IHt7IHRlbXBsYXRlICJncmFmYW5hLmNoYXJ0IiAuIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQp7ey0gaWYgLlZhbHVlcy5zZXJ2aWNlLmxhYmVscyB9fQp7eyB0b1lhbWwgLlZhbHVlcy5zZXJ2aWNlLmxhYmVscyB8IGluZGVudCA0IH19Cnt7LSBlbmQgfX0Ke3stIHdpdGggLlZhbHVlcy5zZXJ2aWNlLmFubm90YXRpb25zIH19CiAgYW5ub3RhdGlvbnM6Cnt7IHRvWWFtbCAuIHwgaW5kZW50IDQgfX0Ke3stIGVuZCB9fQpzcGVjOgp7ey0gaWYgKG9yIChlcSAuVmFsdWVzLnNlcnZpY2UudHlwZSAiQ2x1c3RlcklQIikgKGVtcHR5IC5WYWx1ZXMuc2VydmljZS50eXBlKSkgfX0KICB0eXBlOiBDbHVzdGVySVAKICB7ey0gaWYgLlZhbHVlcy5zZXJ2aWNlLmNsdXN0ZXJJUCB9fQogIGNsdXN0ZXJJUDoge3sgLlZhbHVlcy5zZXJ2aWNlLmNsdXN0ZXJJUCB9fQogIHt7ZW5kfX0Ke3stIGVsc2UgaWYgZXEgLlZhbHVlcy5zZXJ2aWNlLnR5cGUgIkxvYWRCYWxhbmNlciIgfX0KICB0eXBlOiB7eyAuVmFsdWVzLnNlcnZpY2UudHlwZSB9fQogIHt7LSBpZiAuVmFsdWVzLnNlcnZpY2UubG9hZEJhbGFuY2VySVAgfX0KICBsb2FkQmFsYW5jZXJJUDoge3sgLlZhbHVlcy5zZXJ2aWNlLmxvYWRCYWxhbmNlcklQIH19CiAge3stIGVuZCB9fQogIHt7LSBpZiAuVmFsdWVzLnNlcnZpY2UubG9hZEJhbGFuY2VyU291cmNlUmFuZ2VzIH19CiAgbG9hZEJhbGFuY2VyU291cmNlUmFuZ2VzOgp7eyB0b1lhbWwgLlZhbHVlcy5zZXJ2aWNlLmxvYWRCYWxhbmNlclNvdXJjZVJhbmdlcyB8IGluZGVudCA0IH19CiAge3stIGVuZCAtfX0Ke3stIGVsc2UgfX0KICB0eXBlOiB7eyAuVmFsdWVzLnNlcnZpY2UudHlwZSB9fQp7ey0gZW5kIH19Cnt7LSBpZiAuVmFsdWVzLnNlcnZpY2UuZXh0ZXJuYWxJUHMgfX0KICBleHRlcm5hbElQczoKe3sgdG9ZYW1sIC5WYWx1ZXMuc2VydmljZS5leHRlcm5hbElQcyB8IGluZGVudCA0IH19Cnt7LSBlbmQgfX0KICBwb3J0czoKICAgIC0gbmFtZTogc2VydmljZQogICAgICBwb3J0OiB7eyAuVmFsdWVzLnNlcnZpY2UucG9ydCB9fQogICAgICBwcm90b2NvbDogVENQCiAgICAgIHRhcmdldFBvcnQ6IDMwMDAKe3sgaWYgKGFuZCAoZXEgLlZhbHVlcy5zZXJ2aWNlLnR5cGUgIk5vZGVQb3J0IikgKG5vdCAoZW1wdHkgLlZhbHVlcy5zZXJ2aWNlLm5vZGVQb3J0KSkpIH19CiAgICAgIG5vZGVQb3J0OiB7ey5WYWx1ZXMuc2VydmljZS5ub2RlUG9ydH19Cnt7IGVuZCB9fQogIHNlbGVjdG9yOgogICAgYXBwOiB7eyB0ZW1wbGF0ZSAiZ3JhZmFuYS5uYW1lIiAuIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19Cg=="
        },
        {
          "filePath": "templates/serviceaccount.yaml",
          "fileContents": "e3stIGlmIC5WYWx1ZXMuc2VydmljZUFjY291bnQuY3JlYXRlIH19CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2VBY2NvdW50Cm1ldGFkYXRhOgogIGxhYmVsczoKICAgIGFwcDoge3sgdGVtcGxhdGUgImdyYWZhbmEubmFtZSIgLiB9fQogICAgY2hhcnQ6IHt7IC5DaGFydC5OYW1lIH19LXt7IC5DaGFydC5WZXJzaW9uIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQogICAgcmVsZWFzZToge3sgLlJlbGVhc2UuTmFtZSB9fQogIG5hbWU6IHt7IHRlbXBsYXRlICJncmFmYW5hLnNlcnZpY2VBY2NvdW50TmFtZSIgLiB9fQp7ey0gZW5kIH19Cg=="
        },
        {
          "filePath": "values.yaml",
          "fileContents": ""
        }
      ]
    },
    "contentSHA": "091919437262ee08b6d7afa80dc43e55c59acf7c2995118bfaaa9dfbc7facf7f"
  }
}